{"version":3,"file":"sb-taxonomy-editor.mjs","sources":["../../../projects/sb-taxonomy-editor/src/lib/sb-taxonomy-editor.service.ts","../../../projects/sb-taxonomy-editor/src/lib/services/local-connection.service.ts","../../../projects/sb-taxonomy-editor/src/lib/services/framework.service.ts","../../../projects/sb-taxonomy-editor/src/lib/sb-taxonomy-editor.component.ts","../../../projects/sb-taxonomy-editor/src/lib/constants/app-constant.ts","../../../projects/sb-taxonomy-editor/src/lib/labels/strings.ts","../../../projects/sb-taxonomy-editor/src/lib/components/create-term/create-term.component.ts","../../../projects/sb-taxonomy-editor/src/lib/components/create-term/create-term.component.html","../../../projects/sb-taxonomy-editor/src/lib/components/connector/connector.component.ts","../../../projects/sb-taxonomy-editor/src/lib/components/connector/connector.component.html","../../../projects/sb-taxonomy-editor/src/lib/services/approval.service.ts","../../../projects/sb-taxonomy-editor/src/lib/services/connector.service.ts","../../../projects/sb-taxonomy-editor/src/lib/components/confirm-dialog-box/confirm-dialog-box.component.ts","../../../projects/sb-taxonomy-editor/src/lib/components/confirm-dialog-box/confirm-dialog-box.component.html","../../../projects/sb-taxonomy-editor/src/lib/components/term-card/term-card.component.ts","../../../projects/sb-taxonomy-editor/src/lib/components/term-card/term-card.component.html","../../../projects/sb-taxonomy-editor/src/lib/components/taxonomy-column-view/taxonomy-column-view.component.ts","../../../projects/sb-taxonomy-editor/src/lib/components/taxonomy-column-view/taxonomy-column-view.component.html","../../../projects/sb-taxonomy-editor/src/lib/components/action-bar/action-bar.component.ts","../../../projects/sb-taxonomy-editor/src/lib/components/action-bar/action-bar.component.html","../../../projects/sb-taxonomy-editor/src/lib/components/taxonomy-view/taxonomy-view.component.ts","../../../projects/sb-taxonomy-editor/src/lib/components/taxonomy-view/taxonomy-view.component.html","../../../projects/sb-taxonomy-editor/src/lib/pipes/order-by.pipe.ts","../../../projects/sb-taxonomy-editor/src/lib/pipes/date.pipe.ts","../../../projects/sb-taxonomy-editor/src/lib/components/pending-approval/pending-approval.component.ts","../../../projects/sb-taxonomy-editor/src/lib/components/pending-approval/pending-approval.component.html","../../../projects/sb-taxonomy-editor/src/lib/components/approval/approval.component.ts","../../../projects/sb-taxonomy-editor/src/lib/components/approval/approval.component.html","../../../projects/sb-taxonomy-editor/src/lib/components/create-categories/create-categories.component.ts","../../../projects/sb-taxonomy-editor/src/lib/components/create-categories/create-categories.component.html","../../../projects/sb-taxonomy-editor/src/lib/components/categories-preview/categories-preview.component.ts","../../../projects/sb-taxonomy-editor/src/lib/components/categories-preview/categories-preview.component.html","../../../projects/sb-taxonomy-editor/src/lib/containers/config-framework/config-framework.component.ts","../../../projects/sb-taxonomy-editor/src/lib/containers/config-framework/config-framework.component.html","../../../projects/sb-taxonomy-editor/src/lib/components/approve-view/approve-view.component.ts","../../../projects/sb-taxonomy-editor/src/lib/components/approve-view/approve-view.component.html","../../../projects/sb-taxonomy-editor/src/lib/sb-taxonomy-editor-routing.module.ts","../../../projects/sb-taxonomy-editor/src/lib/containers/dashboard/dashboard.component.ts","../../../projects/sb-taxonomy-editor/src/lib/containers/dashboard/dashboard.component.html","../../../projects/sb-taxonomy-editor/src/lib/services/token-interceptor.service.ts","../../../projects/sb-taxonomy-editor/src/lib/containers/landing-page/landing-page.component.ts","../../../projects/sb-taxonomy-editor/src/lib/containers/landing-page/landing-page.component.html","../../../projects/sb-taxonomy-editor/src/lib/sb-taxonomy-editor.module.ts","../../../projects/sb-taxonomy-editor/src/public-api.ts","../../../projects/sb-taxonomy-editor/src/sb-taxonomy-editor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SbTaxonomyEditorService {\n\n  constructor() { }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { IConnectionType } from '../models/connection-type.model';\nimport { ENVIRONMENT } from './connection.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocalConnectionService {\n\n    private _vars: IConnectionType = {\n        data: {\n            endpoint: '',\n            frameworkName: '',\n            token: '',\n            isApprovalRequired: false\n        },\n        source: 'online'\n    }\n\n    constructor() {\n        const env = JSON.parse(localStorage.getItem('environment'));\n        if (env) {\n            this._vars.data.endpoint = env.url;\n            this._vars.data.token = env.token;\n            this._vars.data.frameworkName = env.frameworkName;\n            this._vars.data.isApprovalRequired = env.isApprovalRequired;\n        }\n    }\n    get apiUrl() {\n        if (this.localStorage.data.endpoint) {\n            return this.localStorage.data.endpoint\n        }\n        return this._vars.data.endpoint;\n    }\n    get token() {\n        if (this.localStorage.data.token) {\n            return this.localStorage.data.token\n        }\n        return this._vars.data.token;\n    }\n    get frameworkName() {\n        if (this.localStorage.data.frameworkName) {\n            return this.localStorage.data.frameworkName\n        }\n        return this._vars.data.frameworkName;\n    }\n    get connectionType() {\n        if (this.localStorage.source) {\n            return this.localStorage.source\n        }\n        return this._vars.source\n    }\n    set localStorage(val: IConnectionType) {\n        localStorage.setItem('env', JSON.stringify(val))\n    }\n    get localStorage(): IConnectionType {\n        const val = localStorage.getItem('env')\n        if (val !== 'undefined' && val !== null) {\n            return JSON.parse(localStorage.getItem('env') || `{\"source\":\"online\",\"data\":{}}`)\n        }\n        return JSON.parse(`{\"source\":\"online\", \"data\":{}}`)\n    }\n    updateLocalStorage(val: IConnectionType) {\n        this.localStorage = val\n    }\n    clearLocalStorage() {\n        localStorage.removeItem('env')\n        localStorage.removeItem('terms')\n    }\n    getConfigInfo(){\n        return this._vars.data\n    }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators'\nimport { FRAMEWORK } from '../constants/data'\nimport { NSFramework } from '../models/framework.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { v4 as uuidv4 } from 'uuid';\nimport { IConnection } from '../models/connection.model';\n// import { LibConnectionService } from 'taxonomy-editor/lib/services/connection.service';\nimport { LocalConnectionService } from './local-connection.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FrameworkService {\n  categoriesHash: BehaviorSubject<NSFramework.ICategory[] | []> = new BehaviorSubject<NSFramework.ICategory[] | []>([])\n  // termsByCategory: BehaviorSubject<NSFramework.ITermsByCategory[] | []> = new BehaviorSubject<NSFramework.ITermsByCategory[] | []>([])\n  isDataUpdated: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false)\n  currentSelection: BehaviorSubject<{ type: string, data: any, cardRef?: any } | null> = new BehaviorSubject<{ type: string, data: any, cardRef?: any } | null>(null)\n  termSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null)\n  list = new Map<string, NSFramework.IColumnView>();\n  selectionList = new Map<string, NSFramework.IColumnView>();\n  insertUpdateDeleteNotifier: BehaviorSubject<{ type: 'select' | 'insert' | 'update' | 'delete', action: string, data: any }> = new BehaviorSubject<{ type: 'select' | 'insert' | 'update' | 'delete', action: string, data: any }>(null)\n  environment\n  libConfig: IConnection\n  frameworkId: string;\n  rootConfig: any;  \n  constructor(\n    private http: HttpClient,\n    public localConfig: LocalConnectionService\n    // @Inject(LibConnectionService) private config\n  ) {\n    // this.fillCategories()\n\n  }\n\n  getFrameworkInfo(): Observable<any> {\n    localStorage.removeItem('terms');\n      return this.http.get(`/api/framework/v1/read/${this.environment.frameworkName}`).pipe(\n        tap((response: any) => {\n          this.resetAll()\n          this.formateData(response)\n        }),\n        catchError((err) => {\n          this.list.clear()\n          this.categoriesHash.next([])\n          throw 'Error in source. Details: ' + err; // Use console.log(err) for detail\n        }))\n  }\n\n  // readTerms(frameworkId, categoryId, requestBody) {\n  //   return this.http.post(`/api/framework/v1/term/search?framework=${frameworkId}&category=${categoryId}`, requestBody).pipe(\n  //     map((res: any) => res.result))\n  // }\n\n  createTerm(frameworkId, categoryId, requestBody) {\n    return this.http.post(`/api/framework/v1/term/create?framework=${frameworkId}&category=${categoryId}`, requestBody)\n  }\n\n  updateTerm(frameworkId, categoryId, categoryTermCode, reguestBody) {\n    return this.http.patch(`/api/framework/v1/term/update/${categoryTermCode}?framework=${frameworkId}&category=${categoryId}`, reguestBody)\n  }\n\n  publishFramework() {\n    return this.http.post(`/api/framework/v1/publish/${this.environment.frameworkName}`, {}, { headers: { 'X-Channel-Id': this.environment.channelId } })\n  }\n\n  getUuid() {\n    return uuidv4()\n  }\n\n  updateEnvironment(env) {\n    this.environment = env \n  }\n\n  getEnviroment() {\n    return this.environment\n  }\n\n  getFrameworkId() {\n    return this.frameworkId\n  }\n\n  getNextCategory(currentCategory: string) {\n    const currentIndex = this.categoriesHash.value.findIndex((a: NSFramework.ICategory) => {\n      return a.code === currentCategory\n    })\n    let categoryLength = this.categoriesHash.getValue().length\n    /* istanbul ignore next */\n    return (currentIndex + 1) <= categoryLength ? this.categoriesHash.getValue()[currentIndex + 1] : null\n  }\n\n  getPreviousCategory(currentCategory: string) {\n    const currentIndex = this.categoriesHash.value.findIndex((a: NSFramework.ICategory) => {\n      return a.code === currentCategory\n    })\n    /* istanbul ignore next */\n    return (currentIndex - 1) >= 0 ? this.categoriesHash.getValue()[currentIndex - 1] : null\n  }\n\n  /* Not using anywhere ignore unit test */\n   /* istanbul ignore next */ \n  getParentTerm(currentCategory: string) {\n    const parent = this.getPreviousCategory(currentCategory) || null\n    return parent ? this.selectionList.get(parent.code) : null\n  }\n\n  childClick(event: { type: string, data: any }) {\n    this.currentSelection.next(event)\n  }\n\n  resetAll() {\n    this.categoriesHash.next([])\n    this.currentSelection.next(null)\n    this.list.clear()\n  }\n\n  isLastColumn(colCode) {\n    return this.categoriesHash.value && (this.categoriesHash.value.findIndex((a: NSFramework.ICategory) => {\n      return a.code === colCode\n    })) === (this.categoriesHash.value.length - 1)\n    // return false\n  }\n\n /* Not using anywhere ignore unit test */\n   /* istanbul ignore next */ \n  removeItemFromArray(array:[], item) {\n    /* assign a empty array */\n    var tmp = [];\n    /* loop over all array items */\n    for (var index in array) {\n      if (array[index] !== item) {\n        /* push to temporary array if not like item */\n        tmp.push(array[index]);\n      }\n    }\n    /* return the temporary array */\n    return tmp;\n  }\n  // set setTerm(res: any) {\n  //   this.termSubject.next(res)\n  //   let oldTerms = ([...this.getTerm] || [])\n  //   debugger\n  //   if (!res.parent && res.created) {\n  //     oldTerms.push(res.term)\n  //   } else {\n  //     if ((oldTerms.filter(ola => ola.code === res.parent.code) || []).length === 0) {\n  //       if (!res.parent.children) {\n  //         res.parent.children = []\n  //       }\n  //       res.parent.children.push(res.term)\n  //       oldTerms.push(res.parent)\n  //     } else {\n  //       oldTerms.map(ot => {\n  //         if (ot && ot.code === res.parent.code) {\n  //           if (!ot.children) {\n  //             ot.children = []\n  //           }\n  //           ot.children.push(res.term)\n  //         }\n  //       })\n  //     }\n  //   }\n  //   localStorage.setItem('terms', JSON.stringify(oldTerms))\n  // }\n  set setTerm(res: any) {\n    this.termSubject.next(res)\n    let oldTerms = ([...this.getTerm])\n    oldTerms.push(res)\n    localStorage.setItem('terms', JSON.stringify(oldTerms))\n  }\n  get getTerm(): any[] {\n    return JSON.parse(localStorage.getItem('terms') || '[]')\n  }\n   /* istanbul ignore next */ \n  getLocalTermsByParent(parentCode: string): any[] {\n    const filteredData = this.getTerm.filter(x => {\n      return x.parent && x.parent.category === parentCode\n    }) || [];\n\n    return filteredData.map(x => {\n      return x.term\n    })\n  }\n\n  getLocalTermsByCategory(parentCode: string): any[] {\n    \n    const filteredData = this.getTerm.filter(x => {\n      return x.term && x.term.category === parentCode\n    });\n\n    return filteredData\n  }\n  \n  /* istanbul ignore next */ \n  getLocalTermsCategory(category: string): any[] {\n    const filteredData = this.getTerm.filter(x => {\n      return x.category === category\n    });\n\n    return filteredData\n  }\n\n  formateData(response: any) {\n    this.frameworkId = response.result.framework.code;\n    // console.log('response', response);\n    // // const obj = FRAMEWORK;\n    // // const columns: NSFramework.IColumnView[] = [];\n    // // const obj = response\n    (response.result.framework.categories).forEach((a, idx) => {\n      // if (idx <= 1) {\n      // const localData = this.getLocalTermsCategory(a.code)\n      // console.log(\"localData============>\", localData)\n      this.list.set(a.code, {\n        code: a.code,\n        identifier: a.identifier,\n        index: a.index,\n        name: a.name,\n        selected: a.selected,\n        status: a.status as NSFramework.TNodeStatus,\n        description: a.description,\n        translations: a.translations,\n        category:a.category,\n        associations: a.associations,\n        config: this.getConfig(a.code),\n        // children: ([...a.terms, ...localData] || []).map(c => {\n        children: (a.terms || []).map(c => {\n          const associations = c.associations || []\n          if (associations.length > 0) {\n            Object.assign(c, { children: associations })\n          }\n          return c\n        })\n      })\n      // }\n    });\n    const allCategories = []\n    this.list.forEach(a => {\n      allCategories.push({\n        code: a.code,\n        identifier: a.identifier,\n        index: a.index,\n        name: a.name,\n        status: a.status as NSFramework.TNodeStatus,\n        description: a.description,\n        translations: a.translations,\n      } as NSFramework.ICategory)\n    })\n    this.categoriesHash.next(allCategories)\n\n  }\n\n  removeOldLine() {\n     /* istanbul ignore next */ \n    const eles = Array.from(document.getElementsByClassName('leader-line') || [])\n   /* istanbul ignore if */ \n    if(eles.length>0){\n        eles.forEach(ele => ele.remove());\n    }\n  }\n\n\n  setConfig(config: any) {\n    this.rootConfig = config\n\n  }\n\n  getConfig(code: string) {\n    // this.rootConfig = JSON.parse(localStorage.getItem('taxonomyConfig'))\n    let categoryConfig: any;\n    const defaultConfig = this.rootConfig.filter(con => con.frameworkId === 'default')[0]\n    this.rootConfig.forEach((config: any, index: number) => {\n      if(this.frameworkId == config.frameworkId) {\n        categoryConfig = config.config.find((obj: any) => obj.category == code);\n      }\n    });\n    return categoryConfig || defaultConfig.config.find((obj: any) => obj.category == code);\n  }\n\n  isTermExistRemove(id) {\n    let associations = [];\n    let temp;\n     this.selectionList.forEach((parent,i) => {\n       /* istanbul ignore next */ \n      temp = parent.children ? parent.children.filter(child => child.identifier === id) : null\n      associations = parent.children ? parent.children.map(c => {\n        return { identifier: c.identifier} // approvalStatus: c.associationProperties?c.associationProperties.approvalStatus: 'Draft'\n      }) : [] \n\n      if(temp && temp.length) {\n        associations = associations.filter((obj) =>  obj.identifier !== id);\n        const requestBody = {\n          request: {\n              term: {\n                associations: [\n                  ...associations  \n                ]    \n              }\n            } \n          }\n        this.updateTerm(this.frameworkId, parent.category, parent.code,requestBody).subscribe( res => {\n              this.publishFramework().subscribe(res => console.log(res));\n        });\n      }\n    })\n  }\n\n}\n","import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\nimport { FrameworkService } from './services/framework.service';\n\n@Component({\n  selector: 'sb-taxonomy-editor',\n  template: `\n        <router-outlet></router-outlet>\n  `,\n  styles: [\n  ]\n})\nexport class SbTaxonomyEditorComponent implements OnInit {\n  \n  @Input() environment:any;\n  @Input() taxonomyConfig: any;\n\n  constructor(private frameworkService: FrameworkService) { }\n\n  ngOnInit() {\n    this.frameworkService.updateEnvironment(this.environment);\n    this.frameworkService.setConfig(this.taxonomyConfig);\n  }\n}\n","export const APPROVAL = {\n\n    INITIATE: \"INITIATE\",\n    LEVEL1: \"SEND_FOR_REVIEW_L1\",\n    LEVEL2: \"SEND_FOR_REVIEW_L2\",\n    SEND_FOR_PUBLISH: \"SEND_FOR_PUBLISH\",\n\n    ACTION: \"INITIATE\",\n    SERVICE_NAME: \"taxonomy\",\n\n    CREATE:\"/api/workflow/taxonomy/create\",\n    SEARCH:\"/api/workflow/taxonomy/search\",\n    READ: '/api/workflow/taxonomy/read',\n    UPDATE: 'api/workflow/taxonomy/update',\n\n    APPROVE:'APPROVE',\n    REJECT: 'REJECT'\n}\n\nexport const LIVE = 'Live'\nexport const DRAFT = 'Draft'\n\ntype plugType = 'disc' | 'square' | 'hand' | 'arrow1' | 'arrow2' | 'arrow3';\ntype pathType = 'straight' | 'arc' | 'fluid' | 'magnet' | 'grid';\n\nexport interface LLOptions {\n    startPlug?: plugType,\n    startPlugColor?: string,\n    startPlugSize?: Number,\n    startPlugOutlineColor?: string,\n    endPlug?: plugType,\n    endPlugColor?: string,\n    endPlugSize?: Number,\n    endPlugOutlineColor?: string,\n    color?: string,\n    size?: number,\n    path?: pathType,\n    startSocket?: string,\n    endSocket?: string,\n    dash?: any\n  };\n  \nexport const defaultConfig: LLOptions = {\n    startPlug: 'disc',\n    startPlugColor: 'white',\n    startPlugSize: 3,\n    startPlugOutlineColor: '#515151',\n    endPlug: 'arrow3',\n    endPlugColor: 'white',\n    endPlugSize: 3,\n    endPlugOutlineColor: '#515151',\n    color: '#515151',\n    size: 1,\n    path: 'grid',\n    startSocket: 'right', endSocket: 'left',\n    dash: {len: 6, gap: 3}\n  }\n\nexport const headerLineConfig = {\n       endPlugColor:'#b9b9b9',\n       endPlugOutlineColor:'#b9b9b9',\n       color:'#b9b9b9',\n       startPlug: 'behind'\n}","export const labels = {\n    flag: \"flag\",\n    createNew: \"Create New\",\n    build: \"build\",\n    noData: \"No Data Available\",\n    add: \"add\",\n    pendingApproval: \"Pending for Approval\",\n    date: \"Date\",\n    more: \"more...\",\n    rightArrow: \"keyboard_arrow_right\",\n    alreadyExist: \"Already Exist.\",\n    cancel: \"Cancel\",\n    create: \"Create\",\n    update: \"Update\",\n    createCategories: \"Create Categories\",\n    category: \"Category\",\n    removeCircleOutline: \"remove_circle_outline\",\n    close: \"close\",\n    endPoint: \"Enter End Point\",\n    token: \"Enter Token\",\n    enterFrameworkName: \"Enter Framework Name\",\n    frameworkName: \"Framework Name\",\n    clear: \"Clear\",\n    or: \"Or\",\n    experienceTaxonomy: \"Experience Taxonomy\",\n    playWithIt: \"Let's Play with it\",\n    newConnection: \"Create New Connection\",\n    categoryPreview: \"Categories Preview\",\n    allFrac: \"All Frac\",\n    treeView: \"tree view...\",\n    categoryName: \"Enter Category Name\",\n    name: \"Enter Name\",\n    description: \"Enter Description\",\n    area: \"Enter area\",\n    type: \"Enter type\"\n}","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FrameworkService } from '../../services/framework.service';\nimport { startWith, map } from 'rxjs/operators';\nimport { FormArray, FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs/internal/Observable';\n// import { Identifiers } from '@angular/compiler';\nimport { NSFramework } from '../../models/framework.model';\nimport * as appConstants from '../../constants/app-constant';\nimport { labels } from '../../labels/strings';\nimport { CardChecked, CardSelection, CardsCount, Card } from '../../models/variable-type.model';\n\n@Component({\n  selector: 'lib-create-term',\n  templateUrl: './create-term.component.html',\n  styleUrls: ['./create-term.component.scss']\n})\n\nexport class CreateTermComponent implements OnInit {\n  name: string = '';\n  termLists: Array<Card> = [];\n  filtedTermLists: Observable<any[]>;\n  createTermForm: FormGroup\n  disableCreate: boolean = false;\n  isTermExist: boolean = false;\n  selectedTerm:Card = {};\n  app_strings = labels;\n   constructor(\n    public dialogRef: MatDialogRef<CreateTermComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private frameWorkService: FrameworkService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.termLists = this.data.columnInfo.children\n    this.initTermForm()\n  }\n\n  initTermForm() {\n    this.createTermForm = this.fb.group({\n      name: ['', [Validators.required]],\n      description: [''],\n      area: [''],\n      type: ['']\n    })\n    this.filtedTermLists = this.createTermForm.get('name').valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value || '')),\n    );\n  }\n\n  private _filter(searchTxt: any): string[] {\n    let isExist;\n    this.disableCreate = false\n    this.isTermExist = false\n    this.createTermForm.get('description').enable()\n    this.createTermForm.get('area').enable()\n    this.createTermForm.get('type').enable()\n    // this.createTermForm.get('description').patchValue('')\n    const filterValue = typeof(searchTxt)==='object'? this._normalizeValue(searchTxt.name):this._normalizeValue(searchTxt);\n    isExist = this.termLists.filter(term => this._normalizeValue(term.name).includes(filterValue));\n    return isExist\n  }\n\n  private _normalizeValue(value: string): string {\n    return value.toLowerCase().replace(/\\s/g, '');\n  }\n\n  onSelect(term) {\n    this.selectedTerm = term.value\n    this.createTermForm.get('name').patchValue(term.value.name)\n    this.createTermForm.get('description').patchValue(term.value.description)\n    this.createTermForm.get('description').disable()\n    this.createTermForm.get('area').patchValue(term.value.area)\n    this.createTermForm.get('area').disable()\n    this.createTermForm.get('type').patchValue(term.value.type)\n    this.createTermForm.get('type').disable()\n    this.disableCreate = true\n  }\n\n saveTerm() {\n      if(this._filter(this.createTermForm.value.name).length>0){\n        this.isTermExist = true\n        console.log('Already exist')\n        return\n      }\n      if(this.createTermForm.valid) {\n        const term:NSFramework.ICreateTerm =   {\n          code:this.frameWorkService.getUuid(),\n          name:this.createTermForm.value.name,\n          description:this.createTermForm.value.description,\n          status: appConstants.LIVE,\n          approvalStatus:appConstants.DRAFT,\n          parents:[\n            {identifier:`${this.data.columnInfo.identifier}`}\n          ],\n          additionalProperties:{}\n        }\n        const requestBody =  {\n          request: {\n            term: term\n          }\n        }\n      \n      this.frameWorkService.createTerm(this.data.frameworkId, this.data.columnInfo.code, requestBody).subscribe((res:any) => {\n        requestBody.request.term['identifier'] = res.result.node_id[0]\n        this.dialogClose({ term: requestBody.request.term, created: true })\n        this.selectedTerm = requestBody.request.term\n        this.updateTerm()\n      })\n    }\n    }\n  \n  \n  updateTerm() {\n    let associations = []\n    let temp\n    let counter = 0\n    let localIsExist = false\n    this.frameWorkService.selectionList.forEach((parent, i) => {\n      counter++\n      temp = parent.children ? parent.children.filter(child => child.identifier === this.selectedTerm.identifier) : null\n      associations = parent.children ? parent.children.map(c => {\n        return { identifier: c.identifier} // approvalStatus: c.associationProperties?c.associationProperties.approvalStatus: 'Draft'\n      }) : [] \n      if(temp && temp.length) {\n        this.isTermExist = true\n        return\n        } else { \n          associations.push({ identifier: this.selectedTerm.identifier}) // approvalStatus: appConstants.DRAFT \n          this.isTermExist = false\n          const reguestBody = {\n          request: {\n              term: {\n                associations: [\n                  ...associations  \n                ]    \n              }\n            } \n          }\n          // console.log('***************************',associations)\n          // this.dialogClose({ term: this.selectedTerm, created: true })\n          this.frameWorkService.updateTerm(this.data.frameworkId, parent.category, parent.code, reguestBody).subscribe((res: any) => {\n            counter--;\n            if(counter === 0 ) {\n              // this.selectedTerm['associationProperties']['approvalStatus'] = 'Draft';\n              this.dialogClose({ term: {...this.selectedTerm, ...{associationProperties:{approvalStatus:'Draft'}}}, created: true })\n            }\n          })\n        }\n    })\n  }\n\n  dialogClose(term) {\n      this.frameWorkService.publishFramework().subscribe(res => {\n        this.dialogRef.close(term);\n      });\n  }\n\n}\n","<div class=\"dialog\">\n    <div class=\"dialog-title\" mat-dialog-title>{{app_strings.createNew}} {{data.columnInfo.name}}</div>\n    <form [formGroup]=\"createTermForm\" novalidate (ngSubmit)=\"disableCreate?updateTerm():saveTerm()\">\n        <mat-form-field>\n            <!-- <mat-label>Enter {{data.name}} name</mat-label> -->\n            <input matInput formControlName=\"name\" placeholder=\"{{app_strings.name}}\"   [matAutocomplete]=\"auto\">\n            <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"onSelect($event.option)\">\n                <mat-option *ngFor=\"let option of filtedTermLists | async\"  [value]=\"option\">\n                  {{option.name}}\n                </mat-option>\n              </mat-autocomplete>\n        </mat-form-field>\n        <mat-error *ngIf=\"isTermExist\">{{app_strings.alreadyExist}}</mat-error>\n        <mat-form-field>\n            <!-- <mat-label>Enter {{data.name}} name</mat-label> -->\n            <textarea matInput formControlName=\"description\" placeholder=\"{{app_strings.description}}\"></textarea>\n        </mat-form-field>\n        <mat-form-field>\n            <!-- <mat-label>Enter {{data.area}} area</mat-label> -->\n            <input matInput formControlName=\"name\" placeholder=\"{{app_strings.area}}\"   [matAutocomplete]=\"auto\">\n        </mat-form-field>\n        <mat-form-field>\n            <!-- <mat-label>Enter {{data.type}} type</mat-label> -->\n            <input matInput formControlName=\"name\" placeholder=\"{{app_strings.name}}\"   [matAutocomplete]=\"auto\">\n        </mat-form-field>\n         <footer class=\"actions\">\n            <button mat-raised-button color=\"default\" type=\"reset\" (click)=\"dialogClose('')\">{{app_strings.cancel}}</button>\n            <button mat-raised-button color=\"primary\" type=\"submit\" cdkFocusInitial *ngIf=\"!disableCreate\">{{app_strings.create}}</button>\n            <button mat-raised-button color=\"primary\" type=\"submit\" cdkFocusInitial *ngIf=\"disableCreate\">{{app_strings.update}}</button>\n        </footer>\n    </form>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { LocalConnectionService } from '../../services/local-connection.service';\nimport { FrameworkService } from '../../services/framework.service';\nimport { IConnectionType } from '../../models/connection-type.model';\nimport { labels } from '../../labels/strings';\n\n\n@Component({\n  selector: 'lib-connector',\n  templateUrl: './connector.component.html',\n  styleUrls: ['./connector.component.scss']\n})\n\nexport class ConnectorComponent implements OnInit {\n  connectorForm: FormGroup;\n  app_strings: any = labels;\n  constructor(\n    public dialogRef: MatDialogRef<ConnectorComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private frameWorkService: FrameworkService,\n    private localScv: LocalConnectionService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    // const requestBody = {\n    //   request: {\n    //     search: {\n    //         status: \"Draft\"\n    //     }\n    // }\n    // } \n    // this.frameWorkService.readTerms(this.data.frameworkId, this.data.categoryId, requestBody).subscribe(data => {\n    //    this.termLists = data.terms\n    // })\n    this.initConnectorForm()\n  }\n\n  initConnectorForm() {\n    this.connectorForm = this.fb.group({\n      endpoint: [this.localScv.localStorage.data.endpoint,\n      [Validators.required,\n      Validators.pattern(/^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/)]],\n      token: [this.localScv.localStorage.data.token, [Validators.nullValidator]],\n      frameworkName: [this.localScv.localStorage.data.frameworkName, [Validators.required]],\n    })\n  }\n  saveConnection() {\n    if (this.connectorForm.valid) {\n      this.dialogRef.close({ source: 'online', data: this.connectorForm.value } as IConnectionType)\n    }\n  }\n  clear() {\n    this.connectorForm.reset()\n    this.dialogRef.close({ source: 'online', data: {} } as IConnectionType)\n  }\n  dialogClose() {\n    this.dialogRef.close({ source: 'online', data: {} } as IConnectionType)\n  }\n  loadDefault() {\n    this.dialogRef.close({ source: 'offline', data: {}} as IConnectionType)\n  }\n\n}\n","<div class=\"flex flex-1 flex-row-reverse pointer\">\n    <button mat-raised-button color=\"default\" (click)=\"dialogClose()\" >\n        <mat-icon mat-raised-button >{{app_strings.close}}</mat-icon>\n    </button>\n</div>\n<div class=\"dialog flex\">\n    <div class=\"flex flex-1 flex-row\">\n        <div class=\"container flex flex-1\">\n            <div class=\"side flex flex-1\">\n                <div class=\"'flex flex-2 padding-s\">\n                    <div class=\"dialog-title\" mat-dialog-title>{{app_strings.newConnection}}</div>\n                    <form [formGroup]=\"connectorForm\" novalidate (ngSubmit)=\"saveConnection()\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>{{app_strings.endPoint}}</mat-label>\n                            <input matInput type=\"url\" formControlName=\"endpoint\" placeholder=\"{{app_strings.endPoint}}\" />\n                        </mat-form-field>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>{{app_strings.token}}</mat-label>\n                            <input matInput formControlName=\"token\" placeholder=\"{{app_strings.token}}\" />\n                        </mat-form-field>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>{{app_strings.enterFrameworkName}}</mat-label>\n                            <input matInput formControlName=\"frameworkName\" placeholder=\"{{app_strings.frameworkName}}\" />\n                        </mat-form-field>\n                        <footer class=\"actions\">\n                            <button mat-raised-button color=\"default\" type=\"reset\"\n                                (click)=\"dialogClose()\">{{app_strings.cancel}}</button>\n                            <button mat-raised-button color=\"default\" type=\"reset\" (click)=\"clear()\">{{app_strings.clear}}</button>\n                            <button mat-raised-button color=\"primary\" type=\"submit\" cdkFocusInitial>{{app_strings.update}}</button>\n                        </footer>\n                    </form>\n                </div>\n            </div>\n            <div class=\"or\">\n                <div class=\"or-line\"></div>\n                <div class=\"or-label\">{{app_strings.or}}</div>\n            </div>\n            <div class=\"side flex flex-1\">\n                <div class=\"'flex flex-1 padding-s\">\n                    <div class=\"dialog-title\" mat-dialog-title>{{app_strings.experienceTaxonomy}}</div>\n                    <button mat-raised-button class=\"play\" color=\"primary\" type=\"reset\" (click)=\"loadDefault()\">\n                        {{app_strings.playWithIt}}\n                    </button>\n                </div>\n            </div>\n        </div>​\n\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { FrameworkService } from '../services/framework.service'\nimport * as API from '../constants/app-constant'\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApprovalService {\n  environment\n  approvalListSubject: BehaviorSubject<any> = new BehaviorSubject([]);\n\n  constructor(private frameworkService: FrameworkService, private http: HttpClient) { \n    this.environment = this.frameworkService.getEnviroment()\n  }\n\n  createApproval(req){\n    req.state = API.APPROVAL.INITIATE\n    req.action = API.APPROVAL.ACTION\n    req.serviceName = API.APPROVAL.SERVICE_NAME\n    return this.http.post(`${API.APPROVAL.CREATE}`,req)\n  }\n\n  getApprovalList(req){\n    return this.http.post(`${API.APPROVAL.SEARCH}`,req)\n  }\n\n  getWorkflowDetails(id) {\n    return this.http.get(`${API.APPROVAL.READ}/${id}`)\n  }\n\n  updateWorkFlowApproval(req){\n    return this.http.patch(`${API.APPROVAL.UPDATE}`, req)\n  }\n\n  removeDuplicates(arr:string[]):string[] {\n    return [...new Set(arr)];\n  }\n\n  setApprovalList(list){\n    this.approvalListSubject.next(list)\n  }\n  getUpdateList(){\n    return this.approvalListSubject.asObservable()\n  }\n}\n","/* eslint-disable */\nimport { ElementRef, Injectable } from '@angular/core';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { FrameworkService } from './framework.service';\nimport { defaultConfig } from '../constants/app-constant';\nimport { LLOptions } from '../constants/app-constant';\n\ndeclare var LeaderLine: any;\n\n\n@Injectable()\nexport class ConnectorService {\n  connectorMap: any = {}\n  elmWrapper: any\n  // assuming following structure\n  // {\n  //   'box1': {\n  //     source: ElementRef,\n  //     lines: [\n  //       {\n  //         target:' card2 of box1', \n  //         line: '_line prototype object'\n  //       }\n  //     ]\n  //   }\n  // }\n\n  constructor(private frameworkService: FrameworkService) { \n    // this.frameworkService.list.forEach((list, index)=> {\n    //   this.connectorMap['box'+list.index]= {}\n    // })\n    console.log('connectorMap -------', this.connectorMap)\n  }\n\n  _drawLine(source, target, options = defaultConfig, sourceContainerId = undefined, targetContainerId = undefined) {\n    console.log('sourceContainerId ::', sourceContainerId)\n    console.log('targetContainerId ::', targetContainerId)\n    const _options = <LLOptions>{...defaultConfig, ...options}\n    let _line;\n    if (Array.isArray(target)) {\n      // target.forEach((_target) => {\n      //   _line = this.renderLine(source, _target, _options);\n      // });\n      let connectedDots = [];\n      target.forEach((_target) => {\n        const tempLine = this.renderLine(source, _target, _options)\n        connectedDots.push(\n        {\n          target: _target, // ref element\n          line: tempLine\n        })\n        if(sourceContainerId) {\n          document.querySelector(sourceContainerId) && document.querySelector(sourceContainerId).addEventListener('scroll', () => {\n            try{\n              tempLine && tempLine.position();\n            } catch(e) {\n              // console.log('Error')\n            }\n          }, true);\n        }\n        if (targetContainerId) {\n          document.querySelector(targetContainerId) && document.querySelector(targetContainerId).addEventListener('scroll', () => {\n            try{\n              tempLine && tempLine.position();\n            } catch(e) {\n              // console.log('Error')\n            }\n          }, true);\n        }\n        // tempLine.show('draw')\n\n      });\n    return connectedDots;\n    } else {\n      _line = this.renderLine(source, target, _options);\n    }\n  }\n\n  private renderLine(source, target, options: LLOptions) {\n    let _options = {\n      animOptions: { duration: 2000, timing: 'linear' },\n      hide: true,\n      // startSocketGravity: 50,\n      // endSocketGravity: [-30, 50]\n    };\n    let _line\n    if(target.targetType === 'id'){\n      _line = new LeaderLine(source, document.getElementById(target.target), _options);\n    }\n    else {\n      _line = new LeaderLine(source, target.target, _options);\n    }\n\n    _line.endPlugOutline = true;\n    _line.startPlugOutline = true;\n    // _line.positionByWindowResize = false;\n    _line.setOptions(options);\n    _line.show('draw');\n    // this.elmWrapper.appendChild(document.querySelector('.leader-line:last-of-type'));\n    // this.position(_line)\n    return _line;\n  }\n\n  updateConnectorsMap(map){\n    this.connectorMap = map\n  }\n\n  position(line) {\n    this.elmWrapper.style.transform = 'none';\n    var rectWrapper = this.elmWrapper.getBoundingClientRect();\n    // Move to the origin of coordinates as the document\n    this.elmWrapper.style.transform = 'translate(' +\n      ((rectWrapper.left + pageXOffset) * -1) + 'px, ' +\n      ((rectWrapper.top + pageYOffset) * -1) + 'px)';\n    line.position();\n  }\n\n  removeAllLines() {\n    if(this.connectorMap) {\n      for (const key in this.connectorMap) {\n        // Remove all n-1 lines and keep only current selection, also clear n+1 lines\n        if(this.connectorMap[key] && this.connectorMap[key].lines && this.connectorMap[key].lines.length > 0) {\n          const lines = this.connectorMap[key].lines\n          lines.forEach(async (element, index) => {\n              await element.line && element.line.remove();\n              lines.splice(index, 1);\n          });\n          this.connectorMap[key].lines = lines\n        }\n      }\n    }\n    // to reset connector map after clearing all the lines\n    this.updateConnectorsMap({})\n  }\n  \n  // _drawHeaderLine(source, target, options = defaultConfig) {\n  //   console.log(source,target,options);\n  //   new LeaderLine(source, target, options);\n  // }\n}","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FrameworkService } from '../../services/framework.service';\n\n@Component({\n  selector: 'confirm-dialog-box',\n  templateUrl: './confirm-dialog-box.component.html',\n  styleUrls: ['./confirm-dialog-box.component.scss']\n})\nexport class ConfirmDialogBoxComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmDialogBoxComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private frameworkService: FrameworkService,\n  ) { }\n\n  ngOnInit(): void {}\n\n  removeAssociation() {\n    this.frameworkService.isTermExistRemove(this.data);\n    this.dialogRef.close();\n  }\n\n}\n","<div mat-dialog-content>\n  <h4>Are you sure want to remove Association?</h4>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button mat-dialog-close >No</button>\n  <button mat-raised-button color=\"primary\" cdkFocusInitial (click)=\"removeAssociation()\">yes</button>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output, SimpleChange } from '@angular/core'\nimport { NSFramework } from '../../models/framework.model'\nimport { ApprovalService } from '../../services/approval.service';\nimport { FrameworkService } from '../../services/framework.service'\nimport { LocalConnectionService } from '../../services/local-connection.service';\nimport { labels } from '../../labels/strings';\nimport { CardSelection, CardChecked, Card } from '../../models/variable-type.model';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { ConfirmDialogBoxComponent } from '../confirm-dialog-box/confirm-dialog-box.component'\n@Component({\n  selector: 'lib-term-card',\n  templateUrl: './term-card.component.html',\n  styleUrls: ['./term-card.component.scss']\n})\nexport class TermCardComponent implements OnInit {\n  // @Input() data!: NSFramework.ITermCard\n\n  private _data: NSFramework.ITermCard;\n  isApprovalRequired: boolean = false\n  approvalList: Array<Card> = [];\n  app_strings: any = labels;\n  @Input()\n  set data(value: any) {\n    this._data = value;\n    //  if(this._data)\n    //    this.createTimeline(this._data[0].id)\n    this._data.children.highlight=false\n  }\n  get data(): any {\n    return this._data;\n  }\n\n  @Output() isSelected = new EventEmitter<CardSelection>()\n  @Output() selectedCard = new EventEmitter<CardChecked>()\n\n  constructor(private frameworkService: FrameworkService, \n    private localConnectionService: LocalConnectionService, \n    private approvalService: ApprovalService,\n    public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.isApprovalRequired = this.localConnectionService.getConfigInfo().isApprovalRequired\n    // console.log(this._data)\n    this.updateApprovalStatus()\n  }\n\n  cardClicked(data: any, cardRef: any) {\n    // this.data.selected = true\n    if(this.frameworkService.isLastColumn(this.data.category)){\n      return \n    }\n    this.isSelected.emit({ element: this.data.children, isSelected: !data.selected })\n    this.frameworkService.currentSelection.next({ type: this.data.category, data: data.children, cardRef })\n  }\n\n  handleProductClick(term, event){\n    this.selectedCard.emit({term:term, checked:event.checked})\n  }\n\n  updateApprovalStatus(){\n     const id = this._data.children.identifier;\n    this.approvalService.getUpdateList().subscribe((list:any) => {\n      this.approvalList = list.map(item => item.identifier);\n      if(this.approvalList){\n           if(this.approvalList.includes(id)){\n              this._data.children.highlight = true\n            }\n      }     \n    })\n  }\n\n  getColor(indexClass:number, cardRef: any,property: string, data:any) {\n    let config = this.frameworkService.getConfig(data.category);\n    if(cardRef.classList.contains('selected') && property === 'bgColor'){\n       return config.color;\n    }\n    if(property === 'border'){\n      let borderColor;\n      if(cardRef.classList.contains((indexClass).toString())){\n        borderColor = \"8px solid\" + config.color;\n      }\n      return borderColor;\n    }\n  }\n  \n  remove(id){\n        this.dialog.open(ConfirmDialogBoxComponent, {\n          data:id,\n          width: '400px',\n          panelClass: 'custom-dialog-container'\n        });\n      // this.frameworkService.isTermExistRemove(id);\n  }\n}\n","<ng-container [ngSwitch]=\"( (data && data?.cardSubType) || 'cardMinimal')\">\n    <ng-container *ngSwitchCase=\"'standard'\" [ngTemplateOutlet]=\"cardStandard\"></ng-container>\n    <ng-container *ngSwitchCase=\"'space-saving'\" [ngTemplateOutlet]=\"cardSpaceSaving\"></ng-container>\n    <ng-container *ngSwitchDefault [ngTemplateOutlet]=\"cardMinimal\"></ng-container>\n</ng-container>\n\n<ng-template #cardMinimal>\n    <div #cardRef class=\"term-card clickable {{data.index}}\" (click)=\"cardClicked(data, cardRef)\"\n        [ngClass]=\"[data.children.selected?'selected':'', data.children.approvalStatus === 'Draft'? 'inDraft':'',\n    data.children.associationProperties?.approvalStatus === 'Draft' && isApprovalRequired && !approvalList.length || data.children.highlight && isApprovalRequired ? 'inAssociationDraft':'']\"\n        id=\"{{data.children.name}}\"\n        [ngStyle]=\"{'background-color':getColor(data.index,cardRef,'bgColor',data),'border-left': getColor(data.index,cardRef,'border',data)}\">\n        <!-- (click)=\"data.selected=!data.selected\" -->\n        <div class=\"term-card-parent\">\n            <!-- <Below element is to show id on top left of the card> -->\n            <!-- <div class=\"id\" [hidden]=\"true\">{{data.children.code}}</div> -->\n            <div class=\"term-card-content\">\n                <div class=\"card-title\">{{data.children.name}}</div>\n                <!-- <span>++{{data.children.selected}}+++</span>\n                <span>=={{data.children.status}}==</span>  -->\n                <div class=\"card-description\">{{data.children.description}} </div>\n                \n            </div>\n        </div>\n        <button mat-icon-button  (click)=\"$event.stopPropagation()\" [matMenuTriggerFor]=\"menu\" aria-label=\"Remove terms Association\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\" class=\"term-dropdown\">\n            <button mat-menu-item (click)=\"remove(data.children.identifier)\">\n              <mat-icon>delete</mat-icon>\n              <span>Remove</span>\n            </button>\n        </mat-menu>\n        <!-- <p>{{data.children.approvalStatus}}, {{data.children.associationProperties?.approvalStatus}}</p> -->\n        <!-- *ngIf=\"!data.isViewOnly && data.children.approvalStatus === 'Draft' && isApprovalRequired\" -->\n        <div class=\"term-card-checkbox\">\n            <mat-checkbox color=\"primary\" *ngIf=\"data.children.approvalStatus === 'Draft' && isApprovalRequired && !approvalList.length || \n            data.children.associationProperties?.approvalStatus === 'Draft' && isApprovalRequired && !approvalList.length ||\n            data.children.highlight && isApprovalRequired\" [checked]=\"data.children.highlight\" class=\"termSelection\"\n                (change)=\"handleProductClick(data.children, $event)\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n            <!-- data.children.highlight?'highlight':'' -->\n            <mat-icon color=\"primary\" class=\"approve-flag\"\n                *ngIf=\"data.children.highlight && isApprovalRequired\">{{app_strings.flag}}</mat-icon>\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #cardStandard>\n    <div>\n        {{data.children.name}}\n    </div>\n    <div>\n        {{data.children.description}}\n    </div>\n</ng-template>\n\n<ng-template #cardSpaceSaving>\n    <div>\n        {{data.children.name}}\n    </div>\n</ng-template>","import { Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { FrameworkService } from '../../services/framework.service';\nimport { Subscription } from 'rxjs';\nimport { ConnectorService } from '../../services/connector.service';\nimport { ApprovalService } from '../../services/approval.service';\nimport { CardChecked, CardSelection, CardsCount, Card } from '../../models/variable-type.model';\ndeclare var LeaderLine: any;\n@Component({\n  selector: 'lib-taxonomy-column-view',\n  templateUrl: './taxonomy-column-view.component.html',\n  styleUrls: ['./taxonomy-column-view.component.scss']\n})\nexport class TaxonomyColumnViewComponent implements OnInit, OnDestroy, OnChanges {\n  @Input() column: Card;\n  @Input() containerId: string\n  connectorMapping: any = {}\n  @Output() updateTaxonomyTerm = new EventEmitter<{ selectedTerm: any, isSelected: boolean }>(true);\n  @Output() updateTermList = new EventEmitter<CardChecked>();\n  @Output() cardsCount = new EventEmitter<CardsCount>();\n  columnData: Array<Card> = [];\n  childSubscription: Subscription = null;\n  newTermSubscription: Subscription = null;\n  approvalTerm: any;\n  termshafall: Array<Card> = [];\n  constructor(\n    private frameworkService: FrameworkService,\n    private connectorService: ConnectorService,\n    private approvalService : ApprovalService\n  ) {\n  }\n  ngOnChanges(changes: SimpleChanges): void {}\n\n\n  ngOnInit(): void {\n    this.subscribeEvents()\n\n    if (this.column.index === 1) {\n      this.approvalService.getUpdateList().subscribe((list:any) => {\n        this.approvalTerm = list.filter(item => this.column.code === item.category)\n        if(this.approvalTerm){\n          this.approvalTerm.forEach((term, i)=> {\n             this.column.children.forEach((lel,j) => {\n                if(lel.identifier === term.identifier){\n                  if(!this.isExists(term)){\n                    this.termshafall.push(lel)\n                  }\n                }\n             })\n          })\n          // this.termshafall = [...this.termshafall]\n          this.column.children.forEach((tr, i) => {\n            if(!this.isExists(tr)){\n              this.termshafall.push(tr)\n            }\n          })\n          this.columnData = this.termshafall;\n          this.cardsCount.emit({category: this.columnData[0].category,count:this.columnData.length});\n        }\n      })\n    }\n    this.connectorMapping = this.connectorService.connectorMap\n    // this.frameworkService.isDataUpdated.subscribe(() => {\n    //   this.ngOnInit()\n    // })\n    \n  }\n \n  isExists(e){\n    let temp = [];\n    return temp.includes(e.identifier)\n    temp = this.termshafall.map(t => t.identifier)\n  }\n  /* istanbul ignore next */\n  subscribeEvents() {\n    if (this.childSubscription) {\n      this.childSubscription.unsubscribe()\n    }\n    this.childSubscription = this.frameworkService.currentSelection.subscribe(e => {\n      if (!e) {\n        return\n      } else if (e.type === this.column.code) {\n        this.updateTaxonomyTerm.emit({ isSelected: true, selectedTerm: e.data })\n        this.columnData = (this.columnData || []).map(item => {\n          if (item.code === e.data.code) {\n            item.selected = true\n          } else {\n            item.selected = false\n          }\n          return item\n        });\n        this.setConnectors(e.cardRef, this.columnData, 'SINGLE')\n        return\n        // console.log(\"SKIP: from subscription===>\", \"FOR \" + this.category, e)\n      } else {\n        const next = this.frameworkService.getNextCategory(e.type);\n        // // console.log(\"ADD: from subscription===>\", \"FOR \" + this.category, next, this.children)\n        if (next && next.code === this.column.code) {\n          //   const back = this.frameworkService.getPreviousCategory(this.column.code)\n          //   console.log('current Saved ===========>', this.frameworkService.getLocalTermsByCategory(this.column.code))\n          //   const localTerms = []\n          //   this.frameworkService.getLocalTermsByCategory(this.column.code).forEach(f => {\n          // debugger\n          //     const lst = back ? this.frameworkService.selectionList.get(back.code) : null; //can use current\n          //     if (lst && f.parent.identifier === lst.identifier) {\n          //       localTerms.push(f.term)\n          //     }\n          //   })\n          //   // get last parent and filter Above\n\n          //   this.columnData = [...localTerms, ...(e.data.children || [])]\n          //     .filter(x => {\n          //       return x.category == this.column.code\n          //     }).map(mer => {\n          //       //**read local children for next */\n          //       // const nextChildren = this.frameworkService.getLocalTermsByParent(this.column.code)\n          //       // console.log(\"Saved ======================+>\", nextChildren)\n          //       /**reset Next level children */\n          //       // this.column.children = this.column.children.map(col => { col.selected = false; return col })\n          //       // mer.selected = false\n          //       mer.children = ([...this.column.children.filter(x => { return x.code === mer.code }).map(a => a.children)].shift() || [])\n          //       return mer\n          //     })\n          //   // this.updateTerms()\n          \n          setTimeout(() => {\n            /* istanbul ignore next */\n            this.setConnectors(e.cardRef, next && next.index < this.column.index ? [] : this.columnData, 'ALL')\n          }, 100);\n          // console.log(this.columnData)\n        }\n\n        if (next && next.index < this.column.index) {\n          this.columnData = [];\n        }\n      }\n    })\n    if (this.newTermSubscription) {\n      this.newTermSubscription.unsubscribe()\n    }\n    this.newTermSubscription = this.frameworkService.insertUpdateDeleteNotifier.subscribe(e => {\n      if (e && e.action) {\n        const next = this.frameworkService.getNextCategory(e.action);\n        if (this.column.code === next.code && e.type === 'select') {\n          this.insertUpdateHandler(e, next)\n        }\n      }\n    })\n  }\n  /* istanbul ignore next */\n  insertUpdateHandler(e, next) {\n    const back = this.frameworkService.getPreviousCategory(this.column.code)\n    // console.log('current Saved ===========>', this.frameworkService.getLocalTermsByCategory(this.column.code))\n    const localTerms = []\n    this.frameworkService.getLocalTermsByCategory(this.column.code).forEach(f => {\n      const selectedParent = back ? this.frameworkService.selectionList.get(back.code) : null; //can use current\n      if (selectedParent && ((f.parent.code === selectedParent.code) || (f.parent.identifier && (f.parent.identifier === selectedParent.identifier)))) {\n        localTerms.push(f.term)\n      }\n    })\n    // get last parent and filter Above\n    this.columnData = [...localTerms, ...(e.data.children || [])]\n      .filter(x => {\n        return x.category == this.column.code\n      }).map(mer => {\n        //**read local children for next */\n        // const nextChildren = this.frameworkService.getLocalTermsByParent(this.column.code)\n        // console.log(\"Saved ======================+>\", nextChildren)\n        /**reset Next level children */\n        this.column.children = this.column.children.map(col => { col.selected = false; return col })\n        mer.selected = false\n        mer.children = ([...this.column.children.filter(x => { return x.code === mer.code }).map(a => a.children)].shift() || [])\n        return mer\n      });\n\n    if(this.columnData.length > 0) {\n      this.cardsCount.emit({category: this.columnData[0].category,count:this.columnData.length});\n    } else {\n      this.cardsCount.emit({category: this.column.code,count: 0});\n    }\n    // this.updateTerms()\n\n    // console.log(this.columnData)\n\n\n\n  }\n  updateSelection1(data: any) { }\n  updateSelection(selection: any) {\n    // console.log(selection.element.code, selection.isSelected)\n    // if(this.column.code==='medium'){\n    // console.log( this.column.children)\n    // }\n    // if (selection.element.category === this.column.code) {\n    //   this.updateTaxonomyTerm.emit({ isSelected: selection.isSelected, selectedTerm: selection.element })\n    // }\n    // this.column.children = this.column.children.map(col => {\n    //   if (col.code === selection.element.code) {\n    //     col.selected = true\n    //   } else {\n    //     col.selected = false\n    //   }\n    //   return col\n    // })\n    console.log(selection)\n  }\n\n  get columnItems() {\n    // const selected = this.column.children.filter(f => { return f.selected })\n    // if (selected.length > 0) {\n    //   const data = this.columnData.map(cd => {\n    //     cd.selected = this.column.children.filter(f => { return cd.identifier === f.identifier }).map(s => s.selected)[0]\n    //     return cd\n    //   })\n    //   return data\n    // } else {\n    return this.columnData\n    // }\n  }\n  /* istanbul ignore next */\n  setConnectors(elementClicked, columnItem, mode) {\n    this.removeConnectors(elementClicked, 'box' + (this.column.index - 1), this.column.index - 1)\n    // console.log('mode', mode)\n    // console.log('child ', columnItem)\n    // console.log('elementClicked', elementClicked)\n    // console.log('connectorMapping', this.connectorMapping)\n    if (mode === 'ALL') {\n      // let tempconnectorMapping = {}\n      // this.connectorService.updateConnectorsMap(tempconnectorMapping)\n      // {\n      //   ['column' + (this.column.index- 1)]: ''\n\n      // }\n      const ids = columnItem.map((c, i) => {\n        return this.column.code + 'Card' + (i + 1)\n      })\n       /* istanbul ignore  */\n      this.connectorMapping['box' + (this.column.index - 1)] = { source: elementClicked, lines: (ids || []).map(id => { return { target: id, line: '', targetType: 'id' } }) }\n      this.connectorService.updateConnectorsMap(this.connectorMapping)\n      // console.log('next', next)\n      const connectionLines = this.connectorService._drawLine(\n        this.connectorMapping['box' + (this.column.index - 1)].source,\n        this.connectorMapping['box' + (this.column.index - 1)].lines,\n        null,\n        '#box' + (this.column.index - 1),\n        '#box' + this.column.index\n      )\n      this.connectorMapping['box' + (this.column.index - 1)].lines = connectionLines\n      // console.log('this.connectorMapping :: ----------------------', this.connectorMapping)\n      // if (cat.code === 'board') {\n      //   this.connectorService._drawLine('box0card0', this.connectorMapping['board']['box0card0'], {\n      //     startPlug: 'disc', endPlug: 'disc', color: 'black'\n      //   }, 'box0', 'box1')\n      // } else if (cat.code === 'medium') {\n      //   this.connectorService._drawLine('box1card1', this.connectorMapping['medium']['box1card1'], {\n      //     startPlug: 'disc', endPlug: 'disc', color: 'black'\n      //   }, 'box0', 'box1')\n      // } else if (cat.code === 'gradeLevel') {\n      //   this.connectorService._drawLine('box2card7', this.connectorMapping['grade']['box2card7'], {\n      //     startPlug: 'disc', endPlug: 'disc', color: 'black'\n      //   }, 'box0', 'box1')\n    } else {\n      // console.log('inside else')\n      // console.log('this.column', this.column)\n      const item = this.column.children.findIndex(c => c.selected) + 1\n       if (this.column.index > 1) {\n        this.connectorMapping['box' + (this.column.index - 1)].lines = [{ target: elementClicked, line: '', targetType: 'element' }]\n        this.connectorService.updateConnectorsMap(this.connectorMapping)\n        const connectionLines = this.connectorService._drawLine(\n          this.connectorMapping['box' + (this.column.index - 1)].source,\n          this.connectorMapping['box' + (this.column.index - 1)].lines,\n          null,\n          '#box' + (this.column.index - 1),\n          '#box' + this.column.index\n        )\n        this.connectorMapping['box' + (this.column.index - 1)].lines = connectionLines\n        // console.log('this.connectorMapping :: ----------------------', this.connectorMapping)\n      }\n    }\n    this.connectorService.updateConnectorsMap(this.connectorMapping)\n\n  }\n  /* istanbul ignore next */\n  removeConnectors(currentElement, prevCol, currentIndex) {\n    console.log('prevCol ------------', prevCol)\n    if (this.connectorMapping) {\n      for (const key in this.connectorMapping) {\n        // Remove all n-1 lines and keep only current selection, also clear n+1 lines\n        if (this.connectorMapping[key] && this.connectorMapping[key].lines && this.connectorMapping[key].lines.length > 0) {\n          const lines = this.connectorMapping[key].lines\n          lines.forEach(async (element, index) => {\n            if (element != currentElement && prevCol == key) {\n              await element.line && element.line.remove();\n              lines.splice(index, 1);\n            }\n          });\n          this.connectorMapping[key].lines = lines\n        }\n\n        // remove all n+2 lines, if clicks previous columns and tree was already drilled down\n        let count = currentIndex + 2;\n        let nextCol = `box${count}`\n        if (this.connectorMapping[nextCol] && this.connectorMapping[nextCol].lines && this.connectorMapping[nextCol].lines.length > 0) {\n          const lines = this.connectorMapping[nextCol].lines\n          lines.forEach(async (element, index) => {\n            await element.line && element.line.remove();\n            lines.splice(index, 1);\n          })\n          this.connectorMapping[nextCol].lines = null\n        }\n      }\n\n    }\n  }\n  selectedCard(event){\n    this.updateTermList.emit(event);\n  }\n\n  ngOnDestroy(): void {\n    if (this.childSubscription) {\n      this.childSubscription.unsubscribe()\n    }\n  }\n  \n}","<ng-container *ngIf=\"columnItems && columnItems.length > 0; else noDataTemplate;\">\n    <ng-container *ngFor=\"let child of columnItems; let j = index\">\n        <div #cardEle id=\"{{column.code}}Card{{j+1}}\" >\n            <lib-term-card\n                [data]=\"{'children': child, 'selected' : false, 'category':column.code, cardSubType: 'minimal', isViewOnly:false,'index':column.index}\"\n                (isSelected)=\"updateSelection1($event)\" (selectedCard)=\"selectedCard($event)\">\n            </lib-term-card>\n        </div>\n    </ng-container>\n</ng-container>\n<ng-template #noDataTemplate>\n    <!-- <div>No {{column.name}} associated</div> -->\n</ng-template>\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { FrameworkService } from '../../services/framework.service';\nimport { labels } from '../../labels/strings';\n\n@Component({\n  selector: 'lib-action-bar',\n  templateUrl: './action-bar.component.html',\n  styleUrls: ['./action-bar.component.scss']\n})\nexport class ActionBarComponent implements OnInit {\n  @Input() actionType;\n  @Input() configType;\n  @Output() sendApproval = new EventEmitter();\n  @Output() closeAction = new EventEmitter();\n  app_strings: any = labels;\n  constructor(private frameworkService: FrameworkService) { }\n\n  ngOnInit() {\n  }\n\n  SendForApproval(){\n      this.sendApproval.emit('')\n  }\n\n  closeActionBar(){\n    this.closeAction.emit('')\n  }\n  getApproveLevelText(res){\n    if(!res) { return }\n    return `Approve ${res.substr(res.lastIndexOf('_')+1,res.length)}`\n  }\n}\n","<!-- *ngIf=\"configType !=='APPROVED' && actionType\" -->\n<mat-card class=\"action-bar\">\n    <div class=\"action-bar-buttons\">\n        <div>\n            <button mat-raised-button color=\"default\" (click)=\"closeActionBar()\">{{app_strings.cancel}}</button>\n        </div>\n        <div>\n            <button mat-raised-button color=\"primary\" (click)=\"SendForApproval()\">\n                {{actionType? getApproveLevelText(configType) :'Send for Approval'}}  \n           </button>\n        </div>\n    </div>\n        <!-- <button mat-raised-button color=\"primary\" (click)=\"publishFramwork()\">Publish</button> -->\n        <!-- <button *ngIf=\"actionType\" mat-button color=\"primary\">\n            <mat-icon color=\"primary\">flag</mat-icon>\n            Terms tobe Approve\n       </button> -->\n\n</mat-card>","import { Component, ElementRef, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild, EventEmitter, OnDestroy } from '@angular/core';\nimport { FrameworkService } from '../../services/framework.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CreateTermComponent } from '../create-term/create-term.component';\nimport { ConnectorComponent } from '../connector/connector.component';\nimport { LocalConnectionService } from '../../services/local-connection.service';\nimport { IConnectionType } from '../../models/connection-type.model';\nimport { Subscription } from 'rxjs';\nimport { ConnectorService } from '../../services/connector.service';\nimport { ApprovalService } from '../../services/approval.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { defaultConfig, headerLineConfig } from '../../constants/app-constant';\nimport { labels } from '../../labels/strings';\nimport { CardSelection, CardChecked, Card } from '../../models/variable-type.model';\n\ndeclare var LeaderLine: any;\n@Component({\n  selector: 'lib-taxonomy-view',\n  templateUrl: './taxonomy-view.component.html',\n  styleUrls: ['./taxonomy-view.component.scss']\n})\nexport class TaxonomyViewComponent implements OnInit, OnDestroy {\n  @Input() approvalList: Array<Card> = [];\n  @Input() isApprovalView: boolean = false;\n  @Input() workFlowStatus: string;\n  @Input() environment:any;\n  @Input() taxonomyConfig: any;\n\n  @Output() sentForApprove = new EventEmitter<any>()\n  mapping = {};\n  heightLighted = []\n  localList = []\n  showPublish: boolean = false\n  newTermSubscription: Subscription = null\n  loaded: any = {}\n  showActionBar: boolean = false\n  approvalRequiredTerms = []\n  draftTerms: Array<Card> = [];\n  isLoading: boolean = false;\n  categoryList:any = [];\n  app_strings: any = labels;\n  constructor(private frameworkService: FrameworkService, \n    private localSvc: LocalConnectionService, \n    public dialog: MatDialog, \n    private approvalService: ApprovalService,\n    private router: Router,\n    private _snackBar: MatSnackBar,\n    private connectorSvc: ConnectorService) { }\n\n  ngOnInit() {\n    this.init()\n    this.showActionBar = this.isApprovalView?true:false;\n  }\n\n  ngOnChanges() {\n    this.draftTerms = this.approvalList;\n  }\n\n  init() {\n    this.initConfig();\n    this.frameworkService.getFrameworkInfo().subscribe(res => {\n      this.connectorSvc.removeAllLines()\n      this.updateLocalData()\n      this.frameworkService.categoriesHash.value.forEach((cat:any) => {\n        this.loaded[cat.code] = true\n      })\n      this.isLoading = false\n        setTimeout(() => {\n             this.drawHeaderLine(res.result.framework.categories.length);  \n        },500)\n    })\n  \n  }\n\n  updateTaxonomyTerm(data: { selectedTerm: any, isSelected: boolean }) {\n    \n    this.updateFinalList(data)\n    this.updateSelection(data.selectedTerm.category, data.selectedTerm.code);\n\n    // if (this.heightLighted.length === 0) {\n    //   this.heightLighted.push(data.selectedTerm);\n    //   return\n    // }\n    // this.heightLighted.every((cat, i) => {\n    //   if (cat.element.category.toLowerCase() === data.selectedTerm.element.category.toLowerCase()) {\n    //     this.heightLighted[i] = data.selectedTerm\n    //     return false\n    //   } else {\n    //     this.heightLighted.push(data.selectedTerm);\n    //     return false\n    //   }\n    // })\n  }\n  updateSelection(category: string, selectedTermCode: string) {\n    this.frameworkService.list.get(category).children.map(item => {\n      item.selected = selectedTermCode === item.code ? true : false\n      return item\n    })\n  }\n\n  //need to refactor at heigh level\n  updateFinalList(data: { selectedTerm: any, isSelected: boolean, parentData?: any, colIndex?: any }) {\n    if (data.isSelected) {\n      // data.selectedTerm.selected = data.isSelected\n      this.frameworkService.selectionList.set(data.selectedTerm.category, data.selectedTerm);\n      const next = this.frameworkService.getNextCategory(data.selectedTerm.category)\n      if (next && next.code) {\n        this.frameworkService.selectionList.delete(next.code)\n      }\n      // notify next\n      this.frameworkService.insertUpdateDeleteNotifier.next({ action: data.selectedTerm.category, type: 'select', data: data.selectedTerm })\n    } \n    if(data.colIndex === 0 && !data.isSelected) {\n      this.isLoading = true;\n      setTimeout(()=> {\n        this.init()\n      },3000)\n    }\n    // insert in colum \n    // if (data.parentData) {\n    //   this.frameworkService.list.get(data.selectedTerm.category).children.push(data.selectedTerm)\n    //   const parent = this.frameworkService.getPreviousCategory(data.selectedTerm.category)\n    //   if (parent && parent.code) {\n    //     // insert in parent \n    //     this.frameworkService.list.get(parent.code).children.map(a => {\n    //       if (data.parentData && a.code === data.parentData.code) {\n    //         if (!a.children) {\n    //           a.children = []\n    //         }\n    //         a.children.push(data.selectedTerm)\n    //       }\n    //     })\n    //     this.frameworkService.isDataUpdated.next(true)\n    //   }\n    // } else if (!data.parentData && !data.isSelected) {\n    //   this.frameworkService.list.get(data.selectedTerm.category).children.push(data.selectedTerm)\n    // }\n    setTimeout(() => {\n      this.loaded[data.selectedTerm.category] = true\n    }, 100);\n\n  }\n  isEnabled(columnCode: string): boolean {\n    return !!this.frameworkService.selectionList.get(columnCode)\n  }\n  openCreateTermDialog(column, colIndex) {  \n    if (!this.isEnabled(column.code)) {\n      const dialog = this.dialog.open(CreateTermComponent, {\n        data: { columnInfo: column, frameworkId: this.frameworkService.getFrameworkId(), selectedparents: this.heightLighted, colIndex: colIndex },\n        width: '400px',\n        panelClass: 'custom-dialog-container'\n      })\n      dialog.afterClosed().subscribe(res => {\n        if(!res) {\n          return;\n        }\n        if (res && res.created) {\n          this.showPublish = true\n        }\n        this.loaded[res.term.category] = false\n        // wait\n        const parentColumn = this.frameworkService.getPreviousCategory(res.term.category)\n        res.parent = null\n        if (parentColumn) {\n          res.parent = this.frameworkService.selectionList.get(parentColumn.code)\n          res.parent.children? res.parent.children.push(res.term) :res.parent['children'] = [res.term]\n          // res.parent.associations?.push(res)\n        }\n        // this.frameworkService.setTerm = res;\n        this.updateFinalList({ selectedTerm: res.term, isSelected: false, parentData: res.parent, colIndex:colIndex })\n        // this.frameworkService.insertUpdateDeleteNotifier.next({ type: 'insert', action: res.parent.code, data: res.term })\n      })\n    }\n  }\n\n  get list(): any[] {\n    // console.log('this.frameworkService.list :: ',this.frameworkService.list)\n    // if (this.localList.length === 0) {\n    //   this.updateLocalData()\n    // }\n    // return this.localList\n    return Array.from(this.frameworkService.list.values())\n  }\n  \n  drawHeaderLine(len: number){\n    const options = {...defaultConfig,...headerLineConfig }\n    for(let i=1; i<=len; i++){\n      const startEle = document.querySelector(`#box${i}count`)\n      const endEle = document.querySelector(`#box${i}Header`)\n      if(startEle && endEle) {\n        new LeaderLine(startEle, endEle, options);\n      }\n    }\n  }\n\n  getColumn(columnCode: string) {\n    return this.frameworkService.list.get(columnCode)\n  }\n  updateLocalData() {\n    // this.localList = Array.from(this.frameworkService.list.values()).map(lst => {\n    //   const selectedTerm = this.frameworkService.selectionList.get(lst.code)\n    //   lst.children.map(ch => { ch.selected = selectedTerm && ch.identifier === selectedTerm.identifier })\n    //   return lst\n    // })\n\n  }\n\n  // get updatedCategories() {\n  //   return this.updateTerms()\n  // }\n  // updateTerms(_term?: any) {\n  //   const finalList = []\n  //   this.list.forEach((category, idx) => {\n  //     const localTerms = this.frameworkService.getLocalTermsByColumn(category.code)\n  //     for (let j = 0; j < localTerms.length; j += 1) {\n  // const previous = this.frameworkService.getPreviousCategory(category.code)\n  // if (previous && finalList[idx - 1]) {\n  //   finalList[idx - 1].children.forEach(lastParent => {\n  //     localTerms[j].parent.forEach(parent => {\n  //       if (lastParent.code === parent.element.code) {\n  //         console.log(\"parent.element.code============>\", parent.element.code)\n  //         if (!lastParent.children) {\n  //           lastParent.children = []\n  //         }\n  //         if (lastParent.children.findIndex(c => c.code === localTerms[j].code) === -1) {\n  //           lastParent.children.unshift(localTerms[j])\n  //         }\n  //       }\n  //     })\n  //   });\n\n  // }\n  //       if (category.code === localTerms[j].category) {\n  //         category.children.push(localTerms[j])\n  //       }\n  //     }\n  //     finalList.push(category)\n  //   })\n\n  //   return finalList\n  // }\n\n\n  // if (localTerms.length > 0) {\n  //   this.columnData.push(...localTerms)\n  //   this.column.children.forEach(col => {\n  //     localTerms.forEach(loc => {\n  //       if (col.code !== loc.code) {\n  //         loc.selected=true\n  //         this.column.children.push(loc)\n  //       }\n  //     })\n  // this.column.children.push(...localTerms)\n  // }\n  // }\n  // get list() {\n  //   let termsWithDraftStatus = []\n  //   console.log('this.frameworkService.list :: ',this.frameworkService.list)\n  //   this.frameworkService.list.forEach((cat,i) => {\n  //       termsWithDraftStatus = cat.children.filter(t => t.approvalStatus === 'Draft')\n  //       this.updateDraftStatusTerms(termsWithDraftStatus)\n  //   })\n  //   this.showActionBar = this.approvalRequiredTerms.length > 1 ? true:false\n  //   return this.frameworkService.list\n  // }\n  \n  newConnection() { \n    const dialog = this.dialog.open(ConnectorComponent, {\n      data: {},\n      width: '90%',\n      // panelClass: 'custom-dialog-container' \n    })\n    dialog.afterClosed().subscribe((res: IConnectionType) => {\n      if ((res.source === 'online' && res.data.endpoint) || (res.source === 'offline')) {\n        this.localSvc.localStorage = res\n        this.init()\n      } else if (res.source === 'online' && !res.data.endpoint) {\n        this.localSvc.localStorage = res\n        this.init()\n      }\n    })\n  }\n\n  updateDraftStatusTerms(event){\n    if(event.checked) {\n      this.draftTerms.push(event.term)\n      } else {\n      this.draftTerms = this.draftTerms.filter(d => event.term.identifier !== d.identifier)\n    }\n    this.showActionBar = this.draftTerms.length>0?true:false\n  }\n\n  getNoOfCards(event:any) {\n    if(this.categoryList.length > 0 && event.category !== '') {\n      let index = this.categoryList.findIndex((obj:any) => obj.category == event.category);\n      if(index > -1) {\n        this.categoryList.splice(index);\n      }\n    }\n    if(event.category == '') {\n      this.categoryList[this.categoryList.length-1].count = 0;\n    }\n    this.categoryList.push(event);\n  }\n  \n\n\n  sendForApproval(){\n    if(!this.isApprovalView){\n        let parentList = []\n        this.list.forEach(ele => {\n          const t = ele.children.filter(term => term.selected === true)\n          if(t[0]){\n            parentList.push(t[0])\n          } \n        })\n        const req = {\n          updateFieldValues:[...parentList, ...this.draftTerms]\n        }\n        this.approvalService.createApproval(req).subscribe(res => {\n          this.frameworkService.removeOldLine()\n          this._snackBar.open('Terms successfully sent for Approval.', 'cancel')\n          // this.router.navigate(['/approval'])\n          // this.showActionBar = false;\n        })\n    } else {\n      this.sentForApprove.emit(this.draftTerms)\n      console.log(this.draftTerms)\n    }\n   \n  }\n\n  closeActionBar(e){ \n    this.showActionBar = false;\n  }\n\n  initConfig() {\n    if(this.environment){\n      this.frameworkService.updateEnvironment(this.environment);\n      this.frameworkService.setConfig(this.taxonomyConfig);\n    }\n  }\n\n  ngOnDestroy(){\n      this.frameworkService.removeOldLine();\n  }\n\n  \n}\n","<div class=\"flex flex-1 connectionSettings hide\">\n    <button mat-raised-button color=\"accent\" (click)=\"newConnection()\">\n        <mat-icon>{{app_strings.build}}</mat-icon>\n    </button>\n</div>\n\n<div *ngIf=\"list && list.length > 0\" class=\"flex heightFix \">\n    <ng-container *ngFor=\"let column of list; let i = index;\">\n        <div class=\"flex-1 felx-col  col-container containers{{list.length}}\" id=\"box{{i+1}}Container\">\n            <div class=\"category-heading-sticky\">\n                <div class=\"category-heading-container\">\n                    <div class='category-header'>\n                        <div class=\"category-header-items\" id=\"box{{i}}Header\">\n                            <mat-icon [ngStyle]=\"{'color':column.config.color}\">{{column.config.icon}}</mat-icon>\n                            <h4>{{column.name}}</h4>\n                            <ng-container *ngIf=\"i != 0 && categoryList?.length > 0; else firstColumn\">\n                                <ng-container *ngFor=\"let category of categoryList\">\n                                    <ng-container *ngIf=\"(column.code == category.category) && column.index !== 1\">\n                                        <span>{{category.count}}</span>\n                                    </ng-container>\n                                </ng-container>\n                            </ng-container>\n                            <ng-template #firstColumn>\n                                <span *ngIf=\"i == 0\" id=\"box{{i+1}}count\">{{column.children.length}}</span>\n                            </ng-template>\n                            <div class=\"arrow\" id=\"box{{i+1}}count\"></div>\n                        </div>\n                    </div>\n                    <div class=\"mb1\" *ngIf=\"!isApprovalView\">\n                        <button [disabled]=\"isEnabled(column.code)\" class=\"w-full addCardButton\" mat-stroked-button\n                            color=\"primary\" (click)=\"openCreateTermDialog(column, i)\">\n                            {{app_strings.createNew}} {{column.name}}\n                            <mat-icon>{{app_strings.add}}</mat-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <!-- {{column.code}} -->\n            <div class=\"padding-x2 cat-columns container\" id=\"box{{i+1}}\">\n                <lib-taxonomy-column-view *ngIf=\"loaded[column.code]\" #selectedTaxonomyTerm [column]=\"column\"\n                    [containerId]=\"'box'+(i+1)\" (updateTaxonomyTerm)=\"updateTaxonomyTerm($event)\"\n                    (updateTermList)=\"updateDraftStatusTerms($event)\" (cardsCount)=\"getNoOfCards($event)\">\n                </lib-taxonomy-column-view>\n            </div>\n        </div>\n    </ng-container>\n    <lib-action-bar *ngIf=\"showActionBar\" [actionType]=\"isApprovalView\" [configType]=\"workFlowStatus\"\n        (sendApproval)=\"sendForApproval()\" (closeAction)=\"closeActionBar($event)\"></lib-action-bar>\n</div>\n<div *ngIf=\"!(list && list.length > 0 )\" class=\"flex heightFix \">\n    <h1>{{app_strings.noData}}</h1>\n<div>\n<div *ngIf=\"isLoading\" class=\"spinner\">\n    <mat-spinner></mat-spinner>\n</div>\n    ","import { Pipe, PipeTransform } from '@angular/core';\nimport { ApprovalService } from '../services/approval.service';\n\n@Pipe({\n  name: 'orderBy'\n})\nexport class OrderByPipe implements PipeTransform {\n  approvalTerms = [];\n  constructor(private approvalService: ApprovalService){}\n\n  transform(value): any{\n    // return null;\n    if(value) {\n      return value.slice().reverse();\n    } else {\n      return null\n    }\n     \n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'date'\n})\nexport class DatePipe implements PipeTransform {\n\n  transform(value: any): any {\n    return new Date(value).toLocaleString().split('/')[0]\n  }\n\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ApprovalService } from '../../services/approval.service';\nimport * as API from '../../constants/app-constant';\nimport { FrameworkService } from '../../services/framework.service';\nimport * as IApp from '../../models/approval.model';\nimport { labels } from '../../labels/strings';\n\n@Component({\n  selector: 'lib-pending-approval',\n  templateUrl: './pending-approval.component.html',\n  styleUrls: ['./pending-approval.component.scss']\n})\nexport class PendingApprovalComponent implements OnInit {\n  pendingList = [];\n  approvalList = [];\n  categories = [];\n  app_strings: any = labels;\n  constructor(private approvalService: ApprovalService, private frameworkService: FrameworkService) { }\n\n  ngOnInit() {\n      this.getApprovalList()\n      this.frameworkService.getFrameworkInfo().subscribe(res => {\n        this.categories = res.result.framework.categories.map(d => d.code)\n      })\n  }\n\n  getApprovalList() {\n    const payload: IApp.IApproval = { applicationStatus:API.APPROVAL.LEVEL1, serviceName:API.APPROVAL.SERVICE_NAME }\n    this.approvalService.getApprovalList(payload).subscribe((res:any) => {\n       this.approvalList = res.result.data\n    })\n  }\n\n  removeDuplicates(arr) {\n    return [...new Set(arr)];\n  }\n\n  createApprovalList(updateFieldValues){\n    let updateFileds = []\n    let categories = []\n    let approvalList = []\n    updateFileds = JSON.parse(updateFieldValues);\n    categories =  updateFileds.map(fd => fd.category)\n    categories =  this.removeDuplicates(categories)\n    categories.forEach((c) => {\n      let temp = {name:'', terms:[], children: []}\n      temp.name = c,\n      temp.children = updateFileds.filter(term => term.category === c)\n      approvalList.push(temp)\n      })\n      return approvalList\n  }\n\n  getTerms(terms: any){\n      const temp = terms.map(t => t.name);\n      const t = temp.shift()\n      return temp\n  }\n\n}\n","<div class=\"pending-approval\">\n    <header class=\"mat-header\">\n        <h2>{{app_strings.pendingApproval}} ({{approvalList.length}})</h2>\n    </header>\n\n    <mat-card *ngFor=\"let p of approvalList | orderBy\">\n\n        <mat-card-content>\n            <span class=\"date\">\n                <h4>{{app_strings.date}}</h4>\n                <span>{{p.lastUpdatedOn | date}}</span>\n            </span>\n            <div *ngFor=\"let t of createApprovalList(p.updateFieldValues)\" class=\"col\">\n                <h4>{{t.name}}</h4>\n                <div matTooltip=\"{{getTerms(t.children)}}\" matTooltipPosition=\"above\" matTooltipClass=\"custom-tooltip\">\n                    {{t.children[0].name}}\n                    <ng-container *ngIf=\"t.children.length>1\">\n                        & {{t.children.length-1}} {{app_strings.more}}\n                    </ng-container>\n                </div>\n            </div>\n            <a class=\"approve-view-link\" routerLink=\"/approval/{{p.wfId}}\"><mat-icon>{{app_strings.rightArrow}}</mat-icon></a>\n        </mat-card-content>\n    </mat-card>\n    <!-- <mat-tab-group mat-align-tabs=\"center\" animationDuration=\"0ms\">\n        <mat-tab label=\"Sent for approval\" active>  -->\n    <!-- <mat-card>\n                <mat-card-content>\n                <div *ngFor=\"let t of categories\" class=\"col\">\n                        <h4>{{t}}</h4>\n                </div>\n                </mat-card-content>\n            </mat-card> -->\n    <!-- <mat-card *ngFor=\"let p of approvalList\">\n                    <mat-card-content>\n                        <div *ngFor=\"let t of createApprovalList(p.updateFieldValues)\" class=\"col\">\n                                <h4>{{t.name}}</h4>\n                                <div matTooltip=\"{{getTerms(t.children)}}\" matTooltipPosition=\"above\" matTooltipClass=\"custom-tooltip\">\n                                        {{t.children[0].name}}\n                                        <ng-container *ngIf=\"t.children.length>1\">\n                                        & {{t.children.length-1}} more...\n                                        </ng-container>\n                                </div>\n                              \n                        </div> \n                        <a class=\"approve-view-link\" routerLink=\"/approval/{{p.wfId}}\"><mat-icon>keyboard_arrow_right</mat-icon></a>\n                    </mat-card-content>\n            </mat-card>\n        </mat-tab> -->\n    <!-- <mat-tab label=\"Approved\"> Approved </mat-tab>\n        <mat-tab label=\"Rejected\"> Rejected </mat-tab> -->\n    <!-- </mat-tab-group> -->\n\n</div>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { labels } from '../../labels/strings';\n\n@Component({\n  selector: 'lib-approval',\n  templateUrl: './approval.component.html',\n  styleUrls: ['./approval.component.scss'],\n  encapsulation:ViewEncapsulation.Emulated\n})\nexport class ApprovalComponent implements OnInit {\n  app_strings: any = labels;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"approval-container\">\n    <mat-tab-group mat-align-tabs=\"start\" animationDuration=\"0ms\" [selectedIndex]=\"1\">\n        <mat-tab label=\"{{app_strings.allFrac}}\"> \n            <h2>{{app_strings.allFrac}}</h2>\n        </mat-tab>\n        <mat-tab label=\"{{app_strings.pendingApproval}}\" active> \n            <ng-template matTabContent>\n                <lib-pending-approval></lib-pending-approval>\n            </ng-template>\n        </mat-tab>\n        <!-- <mat-tab label=\"Approved\"> Approved </mat-tab>\n        <mat-tab label=\"Rejected\"> Rejected </mat-tab> -->\n    </mat-tab-group>\n    <!-- <lib-pending-approval></lib-pending-approval> -->\n</div>","import { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { Component, OnInit, Input, Output , EventEmitter} from '@angular/core';\nimport { FormArray, FormControl, FormBuilder, FormGroup } from '@angular/forms';\nimport { labels } from '../../labels/strings'\n\n\n@Component({\n  selector: 'lib-create-categories',\n  templateUrl: './create-categories.component.html',\n  styleUrls: ['./create-categories.component.scss']\n})\nexport class CreateCategoriesComponent implements OnInit {\n  @Input() taxonomyInfo:any\n  @Output() updateCategory = new EventEmitter()\n  @Output() removeCategories = new EventEmitter()\n  @Output() changePosition = new EventEmitter()\n\n  createCategoriesForm: FormGroup\n\n  app_strings: any = labels;\n  \n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() { \n   this.createCategoriesForm = this.fb.group({\n      categories:this.fb.array([])\n    })\n    if(this.taxonomyInfo){\n      this.initCategoryForm()\n      } else {\n      this.addCategory()\n    }\n  }\n  categories(): FormArray {\n    return this.createCategoriesForm.get('categories') as FormArray\n  }\n\n  newCategories(): FormGroup {  \n    return this.fb.group({  \n      name:'',  \n    })  \n  }  \n\n  addCategory() {  \n    this.categories().push(this.newCategories());  \n  }  \n     \n  removeCategory(i:number) {  \n    this.categories().removeAt(i);  \n    this.removeCategories.emit(i)\n  }  \n\n  initCategoryForm(){\n    for(var cat of this.taxonomyInfo){\n      this.categories().push(\n      this.fb.group({\n          name:cat.name\n        })\n      );  \n    }\n  }\n\n  saveForm() {\n    console.log(this.createCategoriesForm.value.categories)\n    this.updateCategory.emit(this.createCategoriesForm.value.categories)\n  }\n\n  emitCategory(event){\n    this.updateCategory.emit(event.target.value)\n  }\n  drop(event: CdkDragDrop<any[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n      this.changePosition.emit({cur:event.currentIndex, prev:event.previousIndex})\n    } else {\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex,\n      );\n    }\n  }\n}\n","\n<div class=\"form-wrap\">\n    <h1>{{app_strings.createCategories}}</h1>\n    <form [formGroup]=\"createCategoriesForm\" (ngSubmit)=\"saveForm()\" novalidate>\n        <div class=\"form-field\">\n            <div class=\"form-field__wrap\" formArrayName=\"categories\" cdkDropListGroup>\n                <div cdkDropList [cdkDropListData]=\"categories().controls\" (cdkDropListDropped)=\"drop($event)\">\n                <div class=\"form__category\" *ngFor=\"let cat of categories().controls; let i = index\" >\n                        <mat-form-field appearance=\"outline\" [formGroupName]=\"i\" cdkDrag>\n                            <mat-label>{{app_strings.category}} {{i}}</mat-label>\n                            <input matInput placeholder=\"{{app_strings.categoryName}}\" formControlName=\"name\" (blur)=\"emitCategory($event)\"> \n                            <div class=\"drag-Handle\" cdkDragHandle>\n                                <svg width=\"24px\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                                  <path d=\"M10 9h4V6h3l-5-5-5 5h3v3zm-1 1H6V7l-5 5 5 5v-3h3v-4zm14 2l-5-5v3h-3v4h3v3l5-5zm-9 3h-4v3H7l5 5 5-5h-3v-3z\"></path>\n                                  <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                                </svg>\n                            </div>\n                        </mat-form-field>\n                            <mat-icon (click)=\"removeCategory(i)\">{{app_strings.removeCircleOutline}}</mat-icon>\n                           \n                    </div>\n                </div>\n            </div>\n        </div>\n        <footer>\n            <button type=\"button\"  mat-raised-button (click)=\"addCategory()\" color=\"primary\">\n                {{app_strings.add | titlecase}}\n             </button>\n        </footer>\n    </form>\n</div>\n","import { AfterViewInit, Component, ElementRef, Input, OnChanges, OnInit, ViewChild } from '@angular/core';\nimport { labels } from '../../labels/strings'\ndeclare var LeaderLine: any;\n\n@Component({\n  selector: 'lib-categories-preview',\n  templateUrl: './categories-preview.component.html',\n  styleUrls: ['./categories-preview.component.scss']\n})\nexport class CategoriesPreviewComponent implements OnChanges, OnInit { \n\n  @Input() data;\n  lineRef = [];\n  app_strings: any = labels;\n  constructor() { }\n\n  ngOnChanges(){\n    setTimeout(() => {\n          this.drawLine()\n    },200)\n  }\n\n  ngOnInit() {}\n \n  // ngAfterViewInit() {\n  //   this.drawLine()\n  // }\n\n  drawLine(){\n    this.lineRef = []\n    for(let cat of this.data){\n      for(let term of cat.terms){\n        if(term.connected){\n         const startEle = document.querySelector(`#${term.domId}`)\n          if(term.parent) {\n              const endEle = document.querySelector(`#${term.parent}`)\n              const line = new LeaderLine(startEle, endEle);\n              line.color='#666'\n              line.endPlug = 'disc'\n              line.startPlug = 'disc'\n              this.lineRef.push(line)\n          }\n        }\n      }\n    }\n  }\n\n}\n","<div class=\"category\">\n    <h1>{{app_strings.categoryPreview}}</h1>\n    <div class=\"category__wrap\" *ngIf=\"data.length>0\">\n        <div class=\"category__column\" *ngFor=\"let cat of data\">\n            <header class=\"category__header\">{{cat.name}}</header>\n            <mat-card class=\"category__cards\"  [ngClass]=\"{'highlight':term.selected}\" id=\"{{term.domId}}\" *ngFor=\"let term of cat.terms\">\n                <span class=\"category__circle left\"></span>\n                <mat-card-content>{{term.name}}</mat-card-content>\n                <span class=\"category__circle right\"></span>\n            </mat-card>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FrameworkService } from '../../services/framework.service';\nimport { categoryRepresentations, categoryRepresentationsV1 } from '../../constants/data'\ndeclare var LeaderLine: any;\n\n@Component({\n  selector: 'lib-config-framework',\n  templateUrl: './config-framework.component.html',\n  styleUrls: ['./config-framework.component.scss']\n})\nexport class ConfigFrameworkComponent implements OnInit {\n  frameworkCategories;\n  categoriesRepresentations = [];\n  tempCategoryRepresentaions = []\n  oldElements = []\n  constructor(private frameworkService: FrameworkService) { }\n\n  ngOnInit() {\n    this.frameworkService.getFrameworkInfo().subscribe(res => {\n      console.log('Service...',res)\n      this.frameworkCategories = res.result.framework.categories\n    })\n    // this.categoriesRepresentations = categoryRepresentationsV1\n  }\n\n//   updateCategory(data){\n//     for(let i=0;i<data.length;i++) {\n//         this.tempCategoryRepresentaions.push(\n//           {\n//             name: data[i].name,\n             \n//             terms:this.updateTermArry(data[i].name, data[i+1]?data[i+1].name:'', i)\n//           }\n//         )\n//     }\n//     this.categoriesRepresentations = this.tempCategoryRepresentaions;\n//   }\n\n\n\n//   updateTermArry(current,next, index){\n//     let term = []\n//     if(index%2 === 0){\n//       term = [\n//         {\n//           name:`${current} 1`,\n//           domId:`${current}1`\n//         },\n//         {\n//           name: `${current} 2`,\n//           selected:true,\n//           connected:true,\n//           domId:`${current.toLowerCase()}2`,\n//           connectedDomId:next?`${next.toLowerCase()}1`:''\n//         }\n//       ]\n//     } else {\n//       term = [\n//         {\n//           name:`${current} 1`,\n//           selected:true,\n//           connected:true,\n//           domId:`${current.toLowerCase()}1`,\n//           connectedDomId:next?`${next.toLowerCase()}2`:''\n//         },\n//         {\n//           name: `${current} 2`,\n//           domId:`${current}2`\n//         }\n//       ]\n//     }\n//     return term\n//   }\n// }\n\n\n\n\n  updateCategory(name){\n    this.removeOldLine()\n    this.tempCategoryRepresentaions.push(\n          {\n            name: name,\n            terms:this.updateTermArry(name,  this.categoriesRepresentations[this.categoriesRepresentations.length -1], this.categoriesRepresentations.length)\n          }\n    )\n    this.categoriesRepresentations = [...this.tempCategoryRepresentaions]    \n    // console.log(this.categoriesRepresentations)\n}\n\n  updateTermArry(current, parent, index){\n    let term = []\n    if(index%2 === 0) {\n      term = [\n        {\n          name:`${current} 1`,\n          domId:`${current}1`\n        },\n        {\n          name: `${current} 2`,\n          selected:true,\n          connected:true,\n          domId:`${current.toLowerCase()}2`,\n          parent:parent ? `${parent.terms[0].domId}`:''\n        }\n      ]\n    } else {\n      term = [\n        {\n          name:`${current} 1`,\n          selected:true,\n          connected:true,\n          domId:`${current.toLowerCase()}1`,\n          parent:parent?`${parent.terms[1].domId}`:''\n        },\n        {\n          name: `${current} 2`,\n          domId:`${current}2`\n        }\n      ]\n    }\n    return term\n  }\n\n  removeOldLine() {\n    const eles = Array.from(document.getElementsByClassName('leader-line') || [])\n    if(eles.length>0){\n        eles.forEach(ele => ele.remove());\n    }\n  }\n\n  removeCategory(index){\n    this.categoriesRepresentations.splice(index,1)\n    const temp = [...this.categoriesRepresentations]\n    this.categoriesRepresentations = []\n    this.tempCategoryRepresentaions = []\n    temp.forEach(cat => {\n      this.updateCategory(cat.name)\n    })\n  }\n\n  changePosition(event) {\n    let myArray = [...this.tempCategoryRepresentaions];\n    myArray[event.cur] = myArray.splice(event.prev, 1, myArray[event.cur])[0];\n    this.categoriesRepresentations = []\n    this.tempCategoryRepresentaions = []\n    myArray.forEach(cat => {\n      this.updateCategory(cat.name)\n    })\n  }\n\n}\n","<div class=\"config__wrap\">\n    <lib-create-categories class=\"config__form-wrap\" [taxonomyInfo]=\"''\" (updateCategory)=\"updateCategory($event)\" \n    (removeCategories)=\"removeCategory($event)\" (changePosition)=\"changePosition($event)\"></lib-create-categories>\n    <ng-container *ngIf=\"categoriesRepresentations\">\n        <lib-categories-preview  class=\"config__preview\" [data]=\"categoriesRepresentations\"></lib-categories-preview>\n    </ng-container>\n </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators'\nimport { ApprovalService } from '../../services/approval.service';\nimport { FrameworkService } from '../../services/framework.service';\nimport * as API from '../../constants/app-constant'\nimport { MatSnackBar } from '@angular/material/snack-bar';\ndeclare var LeaderLine: any;\n@Component({\n  selector: 'lib-approve-view',\n  templateUrl: './approve-view.component.html',\n  styleUrls: ['./approve-view.component.scss']\n})\nexport class ApproveViewComponent implements OnInit {\n  list$: Observable<object>;\n  workflowDetails:any;\n  listItems: any = []\n  categories: string[] = []\n  showAction = true\n  lineRef = []\n  constructor(private activatedRoute: ActivatedRoute, \n    private approvalService: ApprovalService, \n    private frameworkService: FrameworkService,\n    private _snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n      this.list$ = this.activatedRoute.paramMap\n      .pipe(map(() => {\n        this.getworkFlowDetails(window.history.state.id)\n        return  window.history.state.id\n      }))\n      this.getworkFlowDetails(this.activatedRoute.snapshot.params['id'])\n  }\n\n  getworkFlowDetails(id) {\n      this.approvalService.getWorkflowDetails(id).subscribe((res:any) => {\n          this.listItems = res.result.updateFieldValues.map((list:any) => {\n            list.selected= false\n            return list;\n          });\n          this.workflowDetails = res.result\n          this.approvalService.setApprovalList(this.listItems);\n      });\n  }\n\n  approvalRequest(approvalTerms: any){\n    const requestBody = {\n      wfId:this.activatedRoute.snapshot.params['id'],\n      state:this.workflowDetails.currentStatus,\n      action: API.APPROVAL.APPROVE,\n      serviceName:API.APPROVAL.SERVICE_NAME\n    }\n    this.approvalService.updateWorkFlowApproval(requestBody).subscribe(res => {\n      console.log(res)\n      this._snackBar.open('Terms successfully Approved.', 'cancel')\n    });\n  }\n  closeActionBar(e){\n    this.showAction = false;\n  }\n\n  /* ***** Don't delete this code might need in Future ***** */\n  // drawLine(){\n  //   this.lineRef = []\n  //   this.categories.forEach((cat, i) => {\n  //     this.listItems.forEach((item, j) => {\n  //       console.log(item)\n  //       if(cat === item.category){\n  //         for(let c of item.children){\n  //           if(c.category === this.categories[i+1] && this.isExistInTermList(c)){\n  //               const line = new LeaderLine(document.getElementById(item.name), document.getElementById(c.name))\n  //               line.color='#666'\n  //               line.endPlug = 'disc'\n  //               line.startPlug = 'disc'\n  //               this.lineRef.push(line)\n  //           }\n           \n  //         }\n  //       }\n  //      })\n  //   })\n  // }\n  // isExistInTermList(term){\n  //   const count = this.listItems.filter(item => item.identifier == term.identifier)\n  //   return count.length;\n  // }\n  ngOnDestroy() {\n    this.frameworkService.removeOldLine()\n  }\n}\n","<!-- <div class=\"approve-view__container\" *ngIf=\"listItems && listItems.length > 0 \">\n        <ng-container *ngFor=\"let column of categories let i = index;\">\n            <div class=\"approve-view__columns\">\n                   <h4 class=\"approve-view__columns-title\">{{column}}</h4> \n                <section>\n                    <ng-container *ngFor=\"let term of listItems\">\n                        <div *ngIf=\"column === term.category\" >\n                            <lib-term-card\n                                [data]=\"{'children': term, 'selected' : false, 'category':column, cardSubType: 'minimal', isViewOnly:true}\">\n                            </lib-term-card>\n                        </div>\n                        \n                    </ng-container>\n                </section>\n            </div>\n        </ng-container>\n        <lib-action-bar *ngIf=\"showAction\" [configType]=\"workflowDetails.currentStatus\" [actionType]=\"'approve'\" (sendApproval)=\"approvalRequest()\" (closeAction)=\"closeActionBar($event)\"></lib-action-bar> \n</div> -->\n<ng-container *ngIf=\"listItems\">\n    <lib-taxonomy-view \n        [isApprovalView]=\"true\" \n        [approvalList]=\"listItems\" \n        [workFlowStatus]=\"workflowDetails?.currentStatus\"\n        (sentForApprove)=\"approvalRequest($event)\">\n    </lib-taxonomy-view>\n</ng-container>\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { TaxonomyViewComponent } from './components/taxonomy-view/taxonomy-view.component'\nimport { ApprovalComponent } from './components/approval/approval.component'\nimport { ConfigFrameworkComponent } from './containers/config-framework/config-framework.component'\nimport { DashboardComponent } from './containers/dashboard/dashboard.component'\nimport { ApproveViewComponent } from './components/approve-view/approve-view.component'\n\nconst routes: Routes = [\n    {\n        path: '',\n        pathMatch: 'full',\n        redirectTo:'/taxonomy-view'\n    },\n    {\n         path:'taxonomy-view',\n        component:TaxonomyViewComponent\n    },\n    {\n        path:'config', component:ConfigFrameworkComponent\n    },\n    {\n        path:'approval',  component:ApprovalComponent\n    },\n    {\n        path:'approval/:id',  component:ApproveViewComponent\n    }\n]\n@NgModule({\n    imports: [\n      RouterModule.forChild(routes),\n    ],\n    exports: [RouterModule],\n    providers: [],\n  })\n  export class SbTaxonomyEditorRoutingModule { }\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { FrameworkService } from './framework.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService {\n\n  constructor(private frameWorkServie: FrameworkService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler):   Observable<HttpEvent<any>> {\n    const env = this.frameWorkServie.getEnviroment()\n    const request = req.clone({  \n      setHeaders: {  \n        Authorization: env.authToken,  \n        // channelId: env.channelId\n        // userToken:env.userToken\n      }  \n    }); \n    return next.handle(request)\n  }\n}\n  ","import { Component, OnInit } from '@angular/core';\nimport { FrameworkService } from '../../services/framework.service';\nimport { labels } from '../../labels/strings';\n\n@Component({\n  selector: 'lib-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.scss']\n})\nexport class LandingPageComponent implements OnInit {\n  frameworkCategories: any;\n  app_strings: any = labels;\n\n  constructor(private frameworkService: FrameworkService) { }\n\n  ngOnInit() {\n    this.frameworkService.getFrameworkInfo().subscribe(res => {\n      console.log('Service...',res)\n      this.frameworkCategories = res.result.framework.categories\n    })\n  }\n\n}\n","<div class=\"landing-wrap\">\n    <lib-create-categories [taxonomyInfo]=\"frameworkCategories\"></lib-create-categories>\n    <div>\n        {{app_strings.treeView}}\n    </div>\n</div>\n","import { NgModule, ModuleWithProviders,CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { SbTaxonomyEditorComponent } from './sb-taxonomy-editor.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms'\nimport { SbTaxonomyEditorRoutingModule } from './sb-taxonomy-editor-routing.module'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatFormFieldModule, MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field'\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelect, MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog'\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTabsModule, MAT_TABS_CONFIG } from '@angular/material/tabs';\nimport { MatSnackBarModule, MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { DashboardComponent } from './containers/dashboard/dashboard.component';\nimport { FrameworkService } from './services/framework.service';\nimport { CreateCategoriesComponent } from './components/create-categories/create-categories.component'\nimport { ConfigFrameworkComponent } from './containers/config-framework/config-framework.component'\nimport { TaxonomyViewComponent } from './components/taxonomy-view/taxonomy-view.component'\nimport { TermCardComponent } from './components/term-card/term-card.component'\nimport { CommonModule } from '@angular/common';\nimport { CategoriesPreviewComponent } from './components/categories-preview/categories-preview.component'\nimport { ConnectorService } from './services/connector.service'\nimport { CreateTermComponent } from './components/create-term/create-term.component';\nimport { TaxonomyColumnViewComponent } from './components/taxonomy-column-view/taxonomy-column-view.component'\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http'\nimport { TokenInterceptorService } from './services/token-interceptor.service'\nimport { ConnectorComponent } from './components/connector/connector.component'\nimport { IConnection } from './models/connection.model'\nimport { LocalConnectionService } from './services/local-connection.service'\nimport { ENVIRONMENT } from './services/connection.service'\n// export const LIB_OPTIONS = new InjectionToken<IConnection>('env')\nimport { ActionBarComponent } from './components/action-bar/action-bar.component'\nimport { IConnectionType } from './models/connection-type.model'\nimport { ApprovalComponent } from './components/approval/approval.component';\nimport { PendingApprovalComponent } from './components/pending-approval/pending-approval.component';\nimport { ApproveViewComponent } from './components/approve-view/approve-view.component';\nimport { OrderByPipe } from './pipes/order-by.pipe';\nimport { DatePipe } from './pipes/date.pipe'\nimport { LandingPageComponent } from './containers/landing-page/landing-page.component'\nimport { ConfirmDialogBoxComponent } from './components/confirm-dialog-box/confirm-dialog-box.component';\n\n@NgModule({\n  declarations: [\n    SbTaxonomyEditorComponent,\n    DashboardComponent,\n    ConfigFrameworkComponent,\n    CreateCategoriesComponent,\n    ConfigFrameworkComponent,\n    TaxonomyViewComponent,\n    LandingPageComponent,\n    TermCardComponent,\n    TaxonomyColumnViewComponent,\n    CategoriesPreviewComponent,\n    CategoriesPreviewComponent,\n    CreateTermComponent,\n    ConnectorComponent,\n    ActionBarComponent,\n    ApprovalComponent,\n    PendingApprovalComponent,\n    ApproveViewComponent,\n    OrderByPipe,\n    DatePipe,\n    ConfirmDialogBoxComponent\n  ],\n  imports: [\n    CommonModule,\n    SbTaxonomyEditorRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatInputModule,\n    MatIconModule,\n    MatCardModule,\n    MatDialogModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    HttpClientModule,\n    MatTabsModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatProgressSpinnerModule,\n    MatMenuModule\n  ],\n  providers:[\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'outline' }},\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptorService, multi: true },\n    {provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: {duration: 2000}},\n    { provide: MAT_TABS_CONFIG, useValue: { animationDuration: '0ms' }},\n    FrameworkService,\n    ConnectorService,\n    LocalConnectionService,\n  ],\n  exports: [\n    SbTaxonomyEditorComponent,\n    CreateCategoriesComponent,\n    ConfigFrameworkComponent,\n    TaxonomyViewComponent,\n    TermCardComponent,\n    CategoriesPreviewComponent,\n    ConfigFrameworkComponent\n  ],\n  entryComponents: [\n    CreateTermComponent,\n    ConnectorComponent,\n  ],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class SbTaxonomyEditorModule { \n  static forChild(config: IConnectionType): ModuleWithProviders<SbTaxonomyEditorModule> {\n    return {\n      ngModule: SbTaxonomyEditorModule,\n      providers: [\n        // LocalConnectionService,\n        // {\n        //   provide: ENVIRONMENT,\n        //   useValue: config\n        // }\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of sb-taxonomy-editor\n */\n\nexport * from './lib/sb-taxonomy-editor.service'\nexport * from './lib/sb-taxonomy-editor.component'\nexport * from './lib/sb-taxonomy-editor.module'\nexport * from './lib/components/taxonomy-view/taxonomy-view.component'\nexport * from './lib/components/term-card/term-card.component'\nexport * from './lib/containers/config-framework/config-framework.component'\nexport * from  './lib/components/create-categories/create-categories.component'\nexport *  from './lib/components/categories-preview/categories-preview.component'","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["uuidv4","i2.LocalConnectionService","i1.FrameworkService","i2","appConstants.LIVE","appConstants.DRAFT","i2.FrameworkService","i3","i4","i5","i1","i3.LocalConnectionService","i8","API.APPROVAL","i3.ApprovalService","i7","i9","i2.ConnectorService","i5.TermCardComponent","i4.ApprovalService","i6","i7.ConnectorService","i10","i12.TaxonomyColumnViewComponent","i13.ActionBarComponent","i1.ApprovalService","i8.OrderByPipe","i9.DatePipe","i2.PendingApprovalComponent","i3.CreateCategoriesComponent","i4.CategoriesPreviewComponent","i2.ApprovalService","i3.FrameworkService","i6.TaxonomyViewComponent","i2.CreateCategoriesComponent"],"mappings":"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"}