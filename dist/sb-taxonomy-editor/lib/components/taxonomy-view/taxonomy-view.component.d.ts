import { OnInit, EventEmitter, OnDestroy } from '@angular/core';
import { FrameworkService } from '../../services/framework.service';
import { MatDialog } from '@angular/material/dialog';
import { LocalConnectionService } from '../../services/local-connection.service';
import { Subscription } from 'rxjs';
import { ConnectorService } from '../../services/connector.service';
import { ApprovalService } from '../../services/approval.service';
import { Router } from '@angular/router';
import { MatSnackBar } from '@angular/material/snack-bar';
import { Card } from '../../models/variable-type.model';
import * as i0 from "@angular/core";
export declare class TaxonomyViewComponent implements OnInit, OnDestroy {
    private frameworkService;
    private localSvc;
    dialog: MatDialog;
    private approvalService;
    private router;
    private _snackBar;
    private connectorSvc;
    approvalList: Array<Card>;
    isApprovalView: boolean;
    workFlowStatus: string;
    environment: any;
    taxonomyConfig: any;
    sentForApprove: EventEmitter<any>;
    mapping: {};
    heightLighted: any[];
    localList: any[];
    showPublish: boolean;
    newTermSubscription: Subscription;
    loaded: any;
    showActionBar: boolean;
    approvalRequiredTerms: any[];
    draftTerms: Array<Card>;
    isLoading: boolean;
    categoryList: any;
    app_strings: any;
    constructor(frameworkService: FrameworkService, localSvc: LocalConnectionService, dialog: MatDialog, approvalService: ApprovalService, router: Router, _snackBar: MatSnackBar, connectorSvc: ConnectorService);
    ngOnInit(): void;
    ngOnChanges(): void;
    init(): void;
    updateTaxonomyTerm(data: {
        selectedTerm: any;
        isSelected: boolean;
    }): void;
    updateSelection(category: string, selectedTermCode: string): void;
    updateFinalList(data: {
        selectedTerm: any;
        isSelected: boolean;
        parentData?: any;
        colIndex?: any;
    }): void;
    isEnabled(columnCode: string): boolean;
    openCreateTermDialog(column: any, colIndex: any): void;
    get list(): any[];
    drawHeaderLine(len: number): void;
    getColumn(columnCode: string): import("../../models/framework.model").NSFramework.IColumnView;
    updateLocalData(): void;
    newConnection(): void;
    updateDraftStatusTerms(event: any): void;
    getNoOfCards(event: any): void;
    sendForApproval(): void;
    closeActionBar(e: any): void;
    initConfig(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TaxonomyViewComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TaxonomyViewComponent, "lib-taxonomy-view", never, { "approvalList": "approvalList"; "isApprovalView": "isApprovalView"; "workFlowStatus": "workFlowStatus"; "environment": "environment"; "taxonomyConfig": "taxonomyConfig"; }, { "sentForApprove": "sentForApprove"; }, never, never, false>;
}
