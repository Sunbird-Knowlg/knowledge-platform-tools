import { Component, EventEmitter, Input, Output } from '@angular/core';
import { labels } from '../../labels/strings';
import { ConfirmDialogBoxComponent } from '../confirm-dialog-box/confirm-dialog-box.component';
import * as i0 from "@angular/core";
import * as i1 from "../../services/framework.service";
import * as i2 from "../../services/local-connection.service";
import * as i3 from "../../services/approval.service";
import * as i4 from "@angular/material/dialog";
import * as i5 from "@angular/common";
import * as i6 from "@angular/material/button";
import * as i7 from "@angular/material/icon";
import * as i8 from "@angular/material/checkbox";
import * as i9 from "@angular/material/menu";
export class TermCardComponent {
    constructor(frameworkService, localConnectionService, approvalService, dialog) {
        this.frameworkService = frameworkService;
        this.localConnectionService = localConnectionService;
        this.approvalService = approvalService;
        this.dialog = dialog;
        this.isApprovalRequired = false;
        this.approvalList = [];
        this.app_strings = labels;
        this.isSelected = new EventEmitter();
        this.selectedCard = new EventEmitter();
    }
    set data(value) {
        this._data = value;
        //  if(this._data)
        //    this.createTimeline(this._data[0].id)
        this._data.children.highlight = false;
    }
    get data() {
        return this._data;
    }
    ngOnInit() {
        this.isApprovalRequired = this.localConnectionService.getConfigInfo().isApprovalRequired;
        // console.log(this._data)
        this.updateApprovalStatus();
    }
    cardClicked(data, cardRef) {
        // this.data.selected = true
        if (this.frameworkService.isLastColumn(this.data.category)) {
            return;
        }
        this.isSelected.emit({ element: this.data.children, isSelected: !data.selected });
        this.frameworkService.currentSelection.next({ type: this.data.category, data: data.children, cardRef });
    }
    handleProductClick(term, event) {
        this.selectedCard.emit({ term: term, checked: event.checked });
    }
    updateApprovalStatus() {
        const id = this._data.children.identifier;
        this.approvalService.getUpdateList().subscribe((list) => {
            this.approvalList = list.map(item => item.identifier);
            if (this.approvalList) {
                if (this.approvalList.includes(id)) {
                    this._data.children.highlight = true;
                }
            }
        });
    }
    getColor(indexClass, cardRef, property, data) {
        let config = this.frameworkService.getConfig(data.category);
        if (cardRef.classList.contains('selected') && property === 'bgColor') {
            return config.color;
        }
        if (property === 'border') {
            let borderColor;
            if (cardRef.classList.contains((indexClass).toString())) {
                borderColor = "8px solid" + config.color;
            }
            return borderColor;
        }
    }
    remove(id) {
        this.dialog.open(ConfirmDialogBoxComponent, {
            data: id,
            width: '400px',
            panelClass: 'custom-dialog-container'
        });
        // this.frameworkService.isTermExistRemove(id);
    }
}
TermCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: TermCardComponent, deps: [{ token: i1.FrameworkService }, { token: i2.LocalConnectionService }, { token: i3.ApprovalService }, { token: i4.MatDialog }], target: i0.ɵɵFactoryTarget.Component });
TermCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: TermCardComponent, selector: "lib-term-card", inputs: { data: "data" }, outputs: { isSelected: "isSelected", selectedCard: "selectedCard" }, ngImport: i0, template: "<ng-container [ngSwitch]=\"( (data && data?.cardSubType) || 'cardMinimal')\">\n    <ng-container *ngSwitchCase=\"'standard'\" [ngTemplateOutlet]=\"cardStandard\"></ng-container>\n    <ng-container *ngSwitchCase=\"'space-saving'\" [ngTemplateOutlet]=\"cardSpaceSaving\"></ng-container>\n    <ng-container *ngSwitchDefault [ngTemplateOutlet]=\"cardMinimal\"></ng-container>\n</ng-container>\n\n<ng-template #cardMinimal>\n    <div #cardRef class=\"term-card clickable {{data.index}}\" (click)=\"cardClicked(data, cardRef)\"\n        [ngClass]=\"[data.children.selected?'selected':'', data.children.approvalStatus === 'Draft'? 'inDraft':'',\n    data.children.associationProperties?.approvalStatus === 'Draft' && isApprovalRequired && !approvalList.length || data.children.highlight && isApprovalRequired ? 'inAssociationDraft':'']\"\n        id=\"{{data.children.name}}\"\n        [ngStyle]=\"{'background-color':getColor(data.index,cardRef,'bgColor',data),'border-left': getColor(data.index,cardRef,'border',data)}\">\n        <!-- (click)=\"data.selected=!data.selected\" -->\n        <div class=\"term-card-parent\">\n            <!-- <Below element is to show id on top left of the card> -->\n            <!-- <div class=\"id\" [hidden]=\"true\">{{data.children.code}}</div> -->\n            <div class=\"term-card-content\">\n                <div class=\"card-title\">{{data.children.name}}</div>\n                <!-- <span>++{{data.children.selected}}+++</span>\n                <span>=={{data.children.status}}==</span>  -->\n                <div class=\"card-description\">{{data.children.description}} </div>\n                \n            </div>\n        </div>\n        <button mat-icon-button  (click)=\"$event.stopPropagation()\" [matMenuTriggerFor]=\"menu\" aria-label=\"Remove terms Association\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\" class=\"term-dropdown\">\n            <button mat-menu-item (click)=\"remove(data.children.identifier)\">\n              <mat-icon>delete</mat-icon>\n              <span>Remove</span>\n            </button>\n        </mat-menu>\n        <!-- <p>{{data.children.approvalStatus}}, {{data.children.associationProperties?.approvalStatus}}</p> -->\n        <!-- *ngIf=\"!data.isViewOnly && data.children.approvalStatus === 'Draft' && isApprovalRequired\" -->\n        <div class=\"term-card-checkbox\">\n            <mat-checkbox color=\"primary\" *ngIf=\"data.children.approvalStatus === 'Draft' && isApprovalRequired && !approvalList.length || \n            data.children.associationProperties?.approvalStatus === 'Draft' && isApprovalRequired && !approvalList.length ||\n            data.children.highlight && isApprovalRequired\" [checked]=\"data.children.highlight\" class=\"termSelection\"\n                (change)=\"handleProductClick(data.children, $event)\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n            <!-- data.children.highlight?'highlight':'' -->\n            <mat-icon color=\"primary\" class=\"approve-flag\"\n                *ngIf=\"data.children.highlight && isApprovalRequired\">{{app_strings.flag}}</mat-icon>\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #cardStandard>\n    <div>\n        {{data.children.name}}\n    </div>\n    <div>\n        {{data.children.description}}\n    </div>\n</ng-template>\n\n<ng-template #cardSpaceSaving>\n    <div>\n        {{data.children.name}}\n    </div>\n</ng-template>", styles: [".term-card{border:1px solid #EEEEEE;padding:.5em;margin:0 0 1em;background-color:#fff;border-radius:8px;overflow:hidden;position:relative;z-index:45;box-shadow:#0000001a 0 1px 3px,#0000000f 0 1px 2px}.term-card .termSelection{position:absolute;right:10px;top:10px}.term-card .term-card-parent{display:flex;width:90%}.term-card .term-card-parent .term-card-content{white-space:initial;position:relative;margin-left:.5em}.term-card .term-card-parent .term-card-content .card-title{margin-bottom:.5em}.term-card .term-card-parent .term-card-content .card-description{opacity:.5}.term-card .term-card-checkbox{width:10%}.term-card .mat-menu-trigger{position:absolute;top:0;right:0;z-index:1000}.term-card.selected{color:#fff;border-style:none}.clickable{cursor:pointer}.approve-flag{position:absolute;right:5px;top:35px;font-size:24px}.mat-menu-item{width:200px}::ng-deep .cdk-overlay-pane:has(.mat-menu-panel.term-dropdown){width:200px}.mat-menu-panel .term-dropdown{padding:10px 0}::ng-deep .custom-dialog-container .mat-dialog-container{background:#fff;padding:20px}\n"], dependencies: [{ kind: "directive", type: i5.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i5.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i5.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "directive", type: i5.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: i5.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "directive", type: i5.NgSwitchDefault, selector: "[ngSwitchDefault]" }, { kind: "component", type: i6.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { kind: "component", type: i7.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "component", type: i8.MatCheckbox, selector: "mat-checkbox", inputs: ["disableRipple", "color", "tabIndex"], exportAs: ["matCheckbox"] }, { kind: "component", type: i9.MatMenu, selector: "mat-menu", exportAs: ["matMenu"] }, { kind: "component", type: i9.MatMenuItem, selector: "[mat-menu-item]", inputs: ["disabled", "disableRipple", "role"], exportAs: ["matMenuItem"] }, { kind: "directive", type: i9.MatMenuTrigger, selector: "[mat-menu-trigger-for], [matMenuTriggerFor]", exportAs: ["matMenuTrigger"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: TermCardComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-term-card', template: "<ng-container [ngSwitch]=\"( (data && data?.cardSubType) || 'cardMinimal')\">\n    <ng-container *ngSwitchCase=\"'standard'\" [ngTemplateOutlet]=\"cardStandard\"></ng-container>\n    <ng-container *ngSwitchCase=\"'space-saving'\" [ngTemplateOutlet]=\"cardSpaceSaving\"></ng-container>\n    <ng-container *ngSwitchDefault [ngTemplateOutlet]=\"cardMinimal\"></ng-container>\n</ng-container>\n\n<ng-template #cardMinimal>\n    <div #cardRef class=\"term-card clickable {{data.index}}\" (click)=\"cardClicked(data, cardRef)\"\n        [ngClass]=\"[data.children.selected?'selected':'', data.children.approvalStatus === 'Draft'? 'inDraft':'',\n    data.children.associationProperties?.approvalStatus === 'Draft' && isApprovalRequired && !approvalList.length || data.children.highlight && isApprovalRequired ? 'inAssociationDraft':'']\"\n        id=\"{{data.children.name}}\"\n        [ngStyle]=\"{'background-color':getColor(data.index,cardRef,'bgColor',data),'border-left': getColor(data.index,cardRef,'border',data)}\">\n        <!-- (click)=\"data.selected=!data.selected\" -->\n        <div class=\"term-card-parent\">\n            <!-- <Below element is to show id on top left of the card> -->\n            <!-- <div class=\"id\" [hidden]=\"true\">{{data.children.code}}</div> -->\n            <div class=\"term-card-content\">\n                <div class=\"card-title\">{{data.children.name}}</div>\n                <!-- <span>++{{data.children.selected}}+++</span>\n                <span>=={{data.children.status}}==</span>  -->\n                <div class=\"card-description\">{{data.children.description}} </div>\n                \n            </div>\n        </div>\n        <button mat-icon-button  (click)=\"$event.stopPropagation()\" [matMenuTriggerFor]=\"menu\" aria-label=\"Remove terms Association\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\" class=\"term-dropdown\">\n            <button mat-menu-item (click)=\"remove(data.children.identifier)\">\n              <mat-icon>delete</mat-icon>\n              <span>Remove</span>\n            </button>\n        </mat-menu>\n        <!-- <p>{{data.children.approvalStatus}}, {{data.children.associationProperties?.approvalStatus}}</p> -->\n        <!-- *ngIf=\"!data.isViewOnly && data.children.approvalStatus === 'Draft' && isApprovalRequired\" -->\n        <div class=\"term-card-checkbox\">\n            <mat-checkbox color=\"primary\" *ngIf=\"data.children.approvalStatus === 'Draft' && isApprovalRequired && !approvalList.length || \n            data.children.associationProperties?.approvalStatus === 'Draft' && isApprovalRequired && !approvalList.length ||\n            data.children.highlight && isApprovalRequired\" [checked]=\"data.children.highlight\" class=\"termSelection\"\n                (change)=\"handleProductClick(data.children, $event)\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n            <!-- data.children.highlight?'highlight':'' -->\n            <mat-icon color=\"primary\" class=\"approve-flag\"\n                *ngIf=\"data.children.highlight && isApprovalRequired\">{{app_strings.flag}}</mat-icon>\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #cardStandard>\n    <div>\n        {{data.children.name}}\n    </div>\n    <div>\n        {{data.children.description}}\n    </div>\n</ng-template>\n\n<ng-template #cardSpaceSaving>\n    <div>\n        {{data.children.name}}\n    </div>\n</ng-template>", styles: [".term-card{border:1px solid #EEEEEE;padding:.5em;margin:0 0 1em;background-color:#fff;border-radius:8px;overflow:hidden;position:relative;z-index:45;box-shadow:#0000001a 0 1px 3px,#0000000f 0 1px 2px}.term-card .termSelection{position:absolute;right:10px;top:10px}.term-card .term-card-parent{display:flex;width:90%}.term-card .term-card-parent .term-card-content{white-space:initial;position:relative;margin-left:.5em}.term-card .term-card-parent .term-card-content .card-title{margin-bottom:.5em}.term-card .term-card-parent .term-card-content .card-description{opacity:.5}.term-card .term-card-checkbox{width:10%}.term-card .mat-menu-trigger{position:absolute;top:0;right:0;z-index:1000}.term-card.selected{color:#fff;border-style:none}.clickable{cursor:pointer}.approve-flag{position:absolute;right:5px;top:35px;font-size:24px}.mat-menu-item{width:200px}::ng-deep .cdk-overlay-pane:has(.mat-menu-panel.term-dropdown){width:200px}.mat-menu-panel .term-dropdown{padding:10px 0}::ng-deep .custom-dialog-container .mat-dialog-container{background:#fff;padding:20px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.FrameworkService }, { type: i2.LocalConnectionService }, { type: i3.ApprovalService }, { type: i4.MatDialog }]; }, propDecorators: { data: [{
                type: Input
            }], isSelected: [{
                type: Output
            }], selectedCard: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,