import { Component, Inject } from '@angular/core';
import { MAT_DIALOG_DATA } from '@angular/material/dialog';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/dialog";
import * as i2 from "../../services/framework.service";
import * as i3 from "@angular/material/button";
export class ConfirmDialogBoxComponent {
    constructor(dialogRef, data, frameworkService) {
        this.dialogRef = dialogRef;
        this.data = data;
        this.frameworkService = frameworkService;
    }
    ngOnInit() { }
    removeAssociation() {
        this.frameworkService.isTermExistRemove(this.data);
        this.dialogRef.close();
    }
}
ConfirmDialogBoxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: ConfirmDialogBoxComponent, deps: [{ token: i1.MatDialogRef }, { token: MAT_DIALOG_DATA }, { token: i2.FrameworkService }], target: i0.ɵɵFactoryTarget.Component });
ConfirmDialogBoxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: ConfirmDialogBoxComponent, selector: "confirm-dialog-box", ngImport: i0, template: "<div mat-dialog-content>\n  <h4>Are you sure want to remove Association?</h4>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button mat-dialog-close >No</button>\n  <button mat-raised-button color=\"primary\" cdkFocusInitial (click)=\"removeAssociation()\">yes</button>\n</div>\n", styles: [".mat-dialog-actions{justify-content:right}\n"], dependencies: [{ kind: "component", type: i3.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { kind: "directive", type: i1.MatDialogClose, selector: "[mat-dialog-close], [matDialogClose]", inputs: ["aria-label", "type", "mat-dialog-close", "matDialogClose"], exportAs: ["matDialogClose"] }, { kind: "directive", type: i1.MatDialogContent, selector: "[mat-dialog-content], mat-dialog-content, [matDialogContent]" }, { kind: "directive", type: i1.MatDialogActions, selector: "[mat-dialog-actions], mat-dialog-actions, [matDialogActions]", inputs: ["align"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: ConfirmDialogBoxComponent, decorators: [{
            type: Component,
            args: [{ selector: 'confirm-dialog-box', template: "<div mat-dialog-content>\n  <h4>Are you sure want to remove Association?</h4>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button mat-dialog-close >No</button>\n  <button mat-raised-button color=\"primary\" cdkFocusInitial (click)=\"removeAssociation()\">yes</button>\n</div>\n", styles: [".mat-dialog-actions{justify-content:right}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.MatDialogRef }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [MAT_DIALOG_DATA]
                }] }, { type: i2.FrameworkService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlybS1kaWFsb2ctYm94LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3NiLXRheG9ub215LWVkaXRvci9zcmMvbGliL2NvbXBvbmVudHMvY29uZmlybS1kaWFsb2ctYm94L2NvbmZpcm0tZGlhbG9nLWJveC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9zYi10YXhvbm9teS1lZGl0b3Ivc3JjL2xpYi9jb21wb25lbnRzL2NvbmZpcm0tZGlhbG9nLWJveC9jb25maXJtLWRpYWxvZy1ib3guY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDMUQsT0FBTyxFQUFFLGVBQWUsRUFBZ0IsTUFBTSwwQkFBMEIsQ0FBQzs7Ozs7QUFRekUsTUFBTSxPQUFPLHlCQUF5QjtJQUVwQyxZQUNTLFNBQWtELEVBQ3pCLElBQVMsRUFDakMsZ0JBQWtDO1FBRm5DLGNBQVMsR0FBVCxTQUFTLENBQXlDO1FBQ3pCLFNBQUksR0FBSixJQUFJLENBQUs7UUFDakMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtJQUN4QyxDQUFDO0lBRUwsUUFBUSxLQUFVLENBQUM7SUFFbkIsaUJBQWlCO1FBQ2YsSUFBSSxDQUFDLGdCQUFnQixDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNuRCxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3pCLENBQUM7O3NIQWJVLHlCQUF5Qiw4Q0FJMUIsZUFBZTswR0FKZCx5QkFBeUIsMERDVHRDLGtTQU9BOzJGREVhLHlCQUF5QjtrQkFMckMsU0FBUzsrQkFDRSxvQkFBb0I7OzBCQVEzQixNQUFNOzJCQUFDLGVBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEluamVjdCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNQVRfRElBTE9HX0RBVEEsIE1hdERpYWxvZ1JlZiB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2RpYWxvZyc7XG5pbXBvcnQgeyBGcmFtZXdvcmtTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvZnJhbWV3b3JrLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjb25maXJtLWRpYWxvZy1ib3gnLFxuICB0ZW1wbGF0ZVVybDogJy4vY29uZmlybS1kaWFsb2ctYm94LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vY29uZmlybS1kaWFsb2ctYm94LmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgQ29uZmlybURpYWxvZ0JveENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIGRpYWxvZ1JlZjogTWF0RGlhbG9nUmVmPENvbmZpcm1EaWFsb2dCb3hDb21wb25lbnQ+LFxuICAgIEBJbmplY3QoTUFUX0RJQUxPR19EQVRBKSBwdWJsaWMgZGF0YTogYW55LFxuICAgIHByaXZhdGUgZnJhbWV3b3JrU2VydmljZTogRnJhbWV3b3JrU2VydmljZSxcbiAgKSB7IH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHt9XG5cbiAgcmVtb3ZlQXNzb2NpYXRpb24oKSB7XG4gICAgdGhpcy5mcmFtZXdvcmtTZXJ2aWNlLmlzVGVybUV4aXN0UmVtb3ZlKHRoaXMuZGF0YSk7XG4gICAgdGhpcy5kaWFsb2dSZWYuY2xvc2UoKTtcbiAgfVxuXG59XG4iLCI8ZGl2IG1hdC1kaWFsb2ctY29udGVudD5cbiAgPGg0PkFyZSB5b3Ugc3VyZSB3YW50IHRvIHJlbW92ZSBBc3NvY2lhdGlvbj88L2g0PlxuPC9kaXY+XG48ZGl2IG1hdC1kaWFsb2ctYWN0aW9ucz5cbiAgPGJ1dHRvbiBtYXQtcmFpc2VkLWJ1dHRvbiBtYXQtZGlhbG9nLWNsb3NlID5ObzwvYnV0dG9uPlxuICA8YnV0dG9uIG1hdC1yYWlzZWQtYnV0dG9uIGNvbG9yPVwicHJpbWFyeVwiIGNka0ZvY3VzSW5pdGlhbCAoY2xpY2spPVwicmVtb3ZlQXNzb2NpYXRpb24oKVwiPnllczwvYnV0dG9uPlxuPC9kaXY+XG4iXX0=