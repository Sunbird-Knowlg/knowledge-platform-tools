import { Component } from '@angular/core';
import * as API from '../../constants/app-constant';
import { labels } from '../../labels/strings';
import * as i0 from "@angular/core";
import * as i1 from "../../services/approval.service";
import * as i2 from "../../services/framework.service";
import * as i3 from "@angular/common";
import * as i4 from "@angular/router";
import * as i5 from "@angular/material/icon";
import * as i6 from "@angular/material/card";
import * as i7 from "@angular/material/tooltip";
import * as i8 from "../../pipes/order-by.pipe";
import * as i9 from "../../pipes/date.pipe";
export class PendingApprovalComponent {
    constructor(approvalService, frameworkService) {
        this.approvalService = approvalService;
        this.frameworkService = frameworkService;
        this.pendingList = [];
        this.approvalList = [];
        this.categories = [];
        this.app_strings = labels;
    }
    ngOnInit() {
        this.getApprovalList();
        this.frameworkService.getFrameworkInfo().subscribe(res => {
            this.categories = res.result.framework.categories.map(d => d.code);
        });
    }
    getApprovalList() {
        const payload = { applicationStatus: API.APPROVAL.LEVEL1, serviceName: API.APPROVAL.SERVICE_NAME };
        this.approvalService.getApprovalList(payload).subscribe((res) => {
            this.approvalList = res.result.data;
        });
    }
    removeDuplicates(arr) {
        return [...new Set(arr)];
    }
    createApprovalList(updateFieldValues) {
        let updateFileds = [];
        let categories = [];
        let approvalList = [];
        updateFileds = JSON.parse(updateFieldValues);
        categories = updateFileds.map(fd => fd.category);
        categories = this.removeDuplicates(categories);
        categories.forEach((c) => {
            let temp = { name: '', terms: [], children: [] };
            temp.name = c,
                temp.children = updateFileds.filter(term => term.category === c);
            approvalList.push(temp);
        });
        return approvalList;
    }
    getTerms(terms) {
        const temp = terms.map(t => t.name);
        const t = temp.shift();
        return temp;
    }
}
PendingApprovalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: PendingApprovalComponent, deps: [{ token: i1.ApprovalService }, { token: i2.FrameworkService }], target: i0.ɵɵFactoryTarget.Component });
PendingApprovalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: PendingApprovalComponent, selector: "lib-pending-approval", ngImport: i0, template: "<div class=\"pending-approval\">\n    <header class=\"mat-header\">\n        <h2>{{app_strings.pendingApproval}} ({{approvalList.length}})</h2>\n    </header>\n\n    <mat-card *ngFor=\"let p of approvalList | orderBy\">\n\n        <mat-card-content>\n            <span class=\"date\">\n                <h4>{{app_strings.date}}</h4>\n                <span>{{p.lastUpdatedOn | date}}</span>\n            </span>\n            <div *ngFor=\"let t of createApprovalList(p.updateFieldValues)\" class=\"col\">\n                <h4>{{t.name}}</h4>\n                <div matTooltip=\"{{getTerms(t.children)}}\" matTooltipPosition=\"above\" matTooltipClass=\"custom-tooltip\">\n                    {{t.children[0].name}}\n                    <ng-container *ngIf=\"t.children.length>1\">\n                        & {{t.children.length-1}} {{app_strings.more}}\n                    </ng-container>\n                </div>\n            </div>\n            <a class=\"approve-view-link\" routerLink=\"/approval/{{p.wfId}}\"><mat-icon>{{app_strings.rightArrow}}</mat-icon></a>\n        </mat-card-content>\n    </mat-card>\n    <!-- <mat-tab-group mat-align-tabs=\"center\" animationDuration=\"0ms\">\n        <mat-tab label=\"Sent for approval\" active>  -->\n    <!-- <mat-card>\n                <mat-card-content>\n                <div *ngFor=\"let t of categories\" class=\"col\">\n                        <h4>{{t}}</h4>\n                </div>\n                </mat-card-content>\n            </mat-card> -->\n    <!-- <mat-card *ngFor=\"let p of approvalList\">\n                    <mat-card-content>\n                        <div *ngFor=\"let t of createApprovalList(p.updateFieldValues)\" class=\"col\">\n                                <h4>{{t.name}}</h4>\n                                <div matTooltip=\"{{getTerms(t.children)}}\" matTooltipPosition=\"above\" matTooltipClass=\"custom-tooltip\">\n                                        {{t.children[0].name}}\n                                        <ng-container *ngIf=\"t.children.length>1\">\n                                        & {{t.children.length-1}} more...\n                                        </ng-container>\n                                </div>\n                              \n                        </div> \n                        <a class=\"approve-view-link\" routerLink=\"/approval/{{p.wfId}}\"><mat-icon>keyboard_arrow_right</mat-icon></a>\n                    </mat-card-content>\n            </mat-card>\n        </mat-tab> -->\n    <!-- <mat-tab label=\"Approved\"> Approved </mat-tab>\n        <mat-tab label=\"Rejected\"> Rejected </mat-tab> -->\n    <!-- </mat-tab-group> -->\n\n</div>", styles: [".pending-approval{padding:0 15px}.pending-approval h2{font-weight:400}.pending-approval .mat-tab-group ::ng-deep .mat-tab-header{background-color:#fff}.pending-approval .mat-tab-group ::ng-deep .mat-tab-header .mat-tab-label{padding:0 10px}.pending-approval .mat-tab-group ::ng-deep .mat-tab-header .mat-tab-label .mat-tab-label-content{color:#000}.pending-approval .mat-tab-group ::ng-deep .mat-tab-header .mat-tab-label-active{background:#FFFFFF}.pending-approval .mat-tab-group ::ng-deep .mat-tab-header .mat-tab-label-active .mat-tab-label-content{color:#000}.pending-approval .mat-card{background:#F3F3F3;margin-top:25px;padding:5px 0;box-shadow:none}.pending-approval .mat-card-content{display:flex;flex-direction:row;justify-content:left;align-items:center;padding-left:4%;position:relative}.pending-approval .mat-card-content h4{text-transform:capitalize;padding:0;margin:10px 0}.pending-approval .mat-card-content .approve-view-link{position:absolute;right:4%}.pending-approval .col{display:flex;flex-direction:column;padding-right:100px}.pending-approval .col div{cursor:pointer;font-size:20px}::ng-deep .custom-tooltip{font-size:16px;background:#FFFFFF!important;color:#000!important;padding:10px 0}::ng-deep .mat-icon{font-size:40px;color:#363636;cursor:pointer}.date{padding:0 20px;font-weight:600}\n"], dependencies: [{ kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i4.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "component", type: i5.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "component", type: i6.MatCard, selector: "mat-card", exportAs: ["matCard"] }, { kind: "directive", type: i6.MatCardContent, selector: "mat-card-content, [mat-card-content], [matCardContent]" }, { kind: "directive", type: i7.MatTooltip, selector: "[matTooltip]", exportAs: ["matTooltip"] }, { kind: "pipe", type: i8.OrderByPipe, name: "orderBy" }, { kind: "pipe", type: i9.DatePipe, name: "date" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: PendingApprovalComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-pending-approval', template: "<div class=\"pending-approval\">\n    <header class=\"mat-header\">\n        <h2>{{app_strings.pendingApproval}} ({{approvalList.length}})</h2>\n    </header>\n\n    <mat-card *ngFor=\"let p of approvalList | orderBy\">\n\n        <mat-card-content>\n            <span class=\"date\">\n                <h4>{{app_strings.date}}</h4>\n                <span>{{p.lastUpdatedOn | date}}</span>\n            </span>\n            <div *ngFor=\"let t of createApprovalList(p.updateFieldValues)\" class=\"col\">\n                <h4>{{t.name}}</h4>\n                <div matTooltip=\"{{getTerms(t.children)}}\" matTooltipPosition=\"above\" matTooltipClass=\"custom-tooltip\">\n                    {{t.children[0].name}}\n                    <ng-container *ngIf=\"t.children.length>1\">\n                        & {{t.children.length-1}} {{app_strings.more}}\n                    </ng-container>\n                </div>\n            </div>\n            <a class=\"approve-view-link\" routerLink=\"/approval/{{p.wfId}}\"><mat-icon>{{app_strings.rightArrow}}</mat-icon></a>\n        </mat-card-content>\n    </mat-card>\n    <!-- <mat-tab-group mat-align-tabs=\"center\" animationDuration=\"0ms\">\n        <mat-tab label=\"Sent for approval\" active>  -->\n    <!-- <mat-card>\n                <mat-card-content>\n                <div *ngFor=\"let t of categories\" class=\"col\">\n                        <h4>{{t}}</h4>\n                </div>\n                </mat-card-content>\n            </mat-card> -->\n    <!-- <mat-card *ngFor=\"let p of approvalList\">\n                    <mat-card-content>\n                        <div *ngFor=\"let t of createApprovalList(p.updateFieldValues)\" class=\"col\">\n                                <h4>{{t.name}}</h4>\n                                <div matTooltip=\"{{getTerms(t.children)}}\" matTooltipPosition=\"above\" matTooltipClass=\"custom-tooltip\">\n                                        {{t.children[0].name}}\n                                        <ng-container *ngIf=\"t.children.length>1\">\n                                        & {{t.children.length-1}} more...\n                                        </ng-container>\n                                </div>\n                              \n                        </div> \n                        <a class=\"approve-view-link\" routerLink=\"/approval/{{p.wfId}}\"><mat-icon>keyboard_arrow_right</mat-icon></a>\n                    </mat-card-content>\n            </mat-card>\n        </mat-tab> -->\n    <!-- <mat-tab label=\"Approved\"> Approved </mat-tab>\n        <mat-tab label=\"Rejected\"> Rejected </mat-tab> -->\n    <!-- </mat-tab-group> -->\n\n</div>", styles: [".pending-approval{padding:0 15px}.pending-approval h2{font-weight:400}.pending-approval .mat-tab-group ::ng-deep .mat-tab-header{background-color:#fff}.pending-approval .mat-tab-group ::ng-deep .mat-tab-header .mat-tab-label{padding:0 10px}.pending-approval .mat-tab-group ::ng-deep .mat-tab-header .mat-tab-label .mat-tab-label-content{color:#000}.pending-approval .mat-tab-group ::ng-deep .mat-tab-header .mat-tab-label-active{background:#FFFFFF}.pending-approval .mat-tab-group ::ng-deep .mat-tab-header .mat-tab-label-active .mat-tab-label-content{color:#000}.pending-approval .mat-card{background:#F3F3F3;margin-top:25px;padding:5px 0;box-shadow:none}.pending-approval .mat-card-content{display:flex;flex-direction:row;justify-content:left;align-items:center;padding-left:4%;position:relative}.pending-approval .mat-card-content h4{text-transform:capitalize;padding:0;margin:10px 0}.pending-approval .mat-card-content .approve-view-link{position:absolute;right:4%}.pending-approval .col{display:flex;flex-direction:column;padding-right:100px}.pending-approval .col div{cursor:pointer;font-size:20px}::ng-deep .custom-tooltip{font-size:16px;background:#FFFFFF!important;color:#000!important;padding:10px 0}::ng-deep .mat-icon{font-size:40px;color:#363636;cursor:pointer}.date{padding:0 20px;font-weight:600}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.ApprovalService }, { type: i2.FrameworkService }]; } });
//# sourceMappingURL=data:application/json;base64,