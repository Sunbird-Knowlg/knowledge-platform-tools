import { Component, Input } from '@angular/core';
import { labels } from '../../labels/strings';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/material/card";
export class CategoriesPreviewComponent {
    constructor() {
        this.lineRef = [];
        this.app_strings = labels;
    }
    ngOnChanges() {
        setTimeout(() => {
            this.drawLine();
        }, 200);
    }
    ngOnInit() { }
    // ngAfterViewInit() {
    //   this.drawLine()
    // }
    drawLine() {
        this.lineRef = [];
        for (let cat of this.data) {
            for (let term of cat.terms) {
                if (term.connected) {
                    const startEle = document.querySelector(`#${term.domId}`);
                    if (term.parent) {
                        const endEle = document.querySelector(`#${term.parent}`);
                        const line = new LeaderLine(startEle, endEle);
                        line.color = '#666';
                        line.endPlug = 'disc';
                        line.startPlug = 'disc';
                        this.lineRef.push(line);
                    }
                }
            }
        }
    }
}
CategoriesPreviewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: CategoriesPreviewComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
CategoriesPreviewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: CategoriesPreviewComponent, selector: "lib-categories-preview", inputs: { data: "data" }, usesOnChanges: true, ngImport: i0, template: "<div class=\"category\">\n    <h1>{{app_strings.categoryPreview}}</h1>\n    <div class=\"category__wrap\" *ngIf=\"data.length>0\">\n        <div class=\"category__column\" *ngFor=\"let cat of data\">\n            <header class=\"category__header\">{{cat.name}}</header>\n            <mat-card class=\"category__cards\"  [ngClass]=\"{'highlight':term.selected}\" id=\"{{term.domId}}\" *ngFor=\"let term of cat.terms\">\n                <span class=\"category__circle left\"></span>\n                <mat-card-content>{{term.name}}</mat-card-content>\n                <span class=\"category__circle right\"></span>\n            </mat-card>\n        </div>\n    </div>\n</div>\n", styles: [".category{display:flex;flex-flow:column;padding:15px}.category h1{font-size:24px;color:#666;font-weight:500}.category__wrap{display:flex;flex-flow:row;padding-top:20px}.category__column{display:flex;flex-flow:column;flex:1;padding:10px 50px;text-align:center}.category__header{margin:30px 0}.category__cards{margin-bottom:15px;position:relative;padding:20px 15px;background:#EEEEEE;box-shadow:0 0 #fff;border:2px solid #ccc}.category__cards.highlight{background:#666666;border:2px solid #666666;color:#fff}.category__circle{position:absolute;top:40%;display:inline-block}.category__circle.left{left:-3.6%}.category__circle.right{right:-3%}#start{width:200px;height:100px;margin:200px;background:#EEEEEE}@media only screen and (max-width: 1024px){.category h1{font-size:20px}.category__column{padding:10px 25px}}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.MatCard, selector: "mat-card", exportAs: ["matCard"] }, { kind: "directive", type: i2.MatCardContent, selector: "mat-card-content, [mat-card-content], [matCardContent]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: CategoriesPreviewComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-categories-preview', template: "<div class=\"category\">\n    <h1>{{app_strings.categoryPreview}}</h1>\n    <div class=\"category__wrap\" *ngIf=\"data.length>0\">\n        <div class=\"category__column\" *ngFor=\"let cat of data\">\n            <header class=\"category__header\">{{cat.name}}</header>\n            <mat-card class=\"category__cards\"  [ngClass]=\"{'highlight':term.selected}\" id=\"{{term.domId}}\" *ngFor=\"let term of cat.terms\">\n                <span class=\"category__circle left\"></span>\n                <mat-card-content>{{term.name}}</mat-card-content>\n                <span class=\"category__circle right\"></span>\n            </mat-card>\n        </div>\n    </div>\n</div>\n", styles: [".category{display:flex;flex-flow:column;padding:15px}.category h1{font-size:24px;color:#666;font-weight:500}.category__wrap{display:flex;flex-flow:row;padding-top:20px}.category__column{display:flex;flex-flow:column;flex:1;padding:10px 50px;text-align:center}.category__header{margin:30px 0}.category__cards{margin-bottom:15px;position:relative;padding:20px 15px;background:#EEEEEE;box-shadow:0 0 #fff;border:2px solid #ccc}.category__cards.highlight{background:#666666;border:2px solid #666666;color:#fff}.category__circle{position:absolute;top:40%;display:inline-block}.category__circle.left{left:-3.6%}.category__circle.right{right:-3%}#start{width:200px;height:100px;margin:200px;background:#EEEEEE}@media only screen and (max-width: 1024px){.category h1{font-size:20px}.category__column{padding:10px 25px}}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { data: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2F0ZWdvcmllcy1wcmV2aWV3LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3NiLXRheG9ub215LWVkaXRvci9zcmMvbGliL2NvbXBvbmVudHMvY2F0ZWdvcmllcy1wcmV2aWV3L2NhdGVnb3JpZXMtcHJldmlldy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9zYi10YXhvbm9teS1lZGl0b3Ivc3JjL2xpYi9jb21wb25lbnRzL2NhdGVnb3JpZXMtcHJldmlldy9jYXRlZ29yaWVzLXByZXZpZXcuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFpQixTQUFTLEVBQWMsS0FBSyxFQUFnQyxNQUFNLGVBQWUsQ0FBQztBQUMxRyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sc0JBQXNCLENBQUE7Ozs7QUFRN0MsTUFBTSxPQUFPLDBCQUEwQjtJQUtyQztRQUZBLFlBQU8sR0FBRyxFQUFFLENBQUM7UUFDYixnQkFBVyxHQUFRLE1BQU0sQ0FBQztJQUNWLENBQUM7SUFFakIsV0FBVztRQUNULFVBQVUsQ0FBQyxHQUFHLEVBQUU7WUFDVixJQUFJLENBQUMsUUFBUSxFQUFFLENBQUE7UUFDckIsQ0FBQyxFQUFDLEdBQUcsQ0FBQyxDQUFBO0lBQ1IsQ0FBQztJQUVELFFBQVEsS0FBSSxDQUFDO0lBRWIsc0JBQXNCO0lBQ3RCLG9CQUFvQjtJQUNwQixJQUFJO0lBRUosUUFBUTtRQUNOLElBQUksQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFBO1FBQ2pCLEtBQUksSUFBSSxHQUFHLElBQUksSUFBSSxDQUFDLElBQUksRUFBQztZQUN2QixLQUFJLElBQUksSUFBSSxJQUFJLEdBQUcsQ0FBQyxLQUFLLEVBQUM7Z0JBQ3hCLElBQUcsSUFBSSxDQUFDLFNBQVMsRUFBQztvQkFDakIsTUFBTSxRQUFRLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFBO29CQUN4RCxJQUFHLElBQUksQ0FBQyxNQUFNLEVBQUU7d0JBQ1osTUFBTSxNQUFNLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFBO3dCQUN4RCxNQUFNLElBQUksR0FBRyxJQUFJLFVBQVUsQ0FBQyxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7d0JBQzlDLElBQUksQ0FBQyxLQUFLLEdBQUMsTUFBTSxDQUFBO3dCQUNqQixJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQTt3QkFDckIsSUFBSSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUE7d0JBQ3ZCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFBO3FCQUMxQjtpQkFDRjthQUNGO1NBQ0Y7SUFDSCxDQUFDOzt1SEFwQ1UsMEJBQTBCOzJHQUExQiwwQkFBMEIsNkdDVHZDLHFxQkFhQTsyRkRKYSwwQkFBMEI7a0JBTHRDLFNBQVM7K0JBQ0Usd0JBQXdCOzBFQU16QixJQUFJO3NCQUFaLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdJbml0LCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBPbkNoYW5nZXMsIE9uSW5pdCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBsYWJlbHMgfSBmcm9tICcuLi8uLi9sYWJlbHMvc3RyaW5ncydcbmRlY2xhcmUgdmFyIExlYWRlckxpbmU6IGFueTtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbGliLWNhdGVnb3JpZXMtcHJldmlldycsXG4gIHRlbXBsYXRlVXJsOiAnLi9jYXRlZ29yaWVzLXByZXZpZXcuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9jYXRlZ29yaWVzLXByZXZpZXcuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBDYXRlZ29yaWVzUHJldmlld0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcywgT25Jbml0IHsgXG5cbiAgQElucHV0KCkgZGF0YTtcbiAgbGluZVJlZiA9IFtdO1xuICBhcHBfc3RyaW5nczogYW55ID0gbGFiZWxzO1xuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gIG5nT25DaGFuZ2VzKCl7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5kcmF3TGluZSgpXG4gICAgfSwyMDApXG4gIH1cblxuICBuZ09uSW5pdCgpIHt9XG4gXG4gIC8vIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgLy8gICB0aGlzLmRyYXdMaW5lKClcbiAgLy8gfVxuXG4gIGRyYXdMaW5lKCl7XG4gICAgdGhpcy5saW5lUmVmID0gW11cbiAgICBmb3IobGV0IGNhdCBvZiB0aGlzLmRhdGEpe1xuICAgICAgZm9yKGxldCB0ZXJtIG9mIGNhdC50ZXJtcyl7XG4gICAgICAgIGlmKHRlcm0uY29ubmVjdGVkKXtcbiAgICAgICAgIGNvbnN0IHN0YXJ0RWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgIyR7dGVybS5kb21JZH1gKVxuICAgICAgICAgIGlmKHRlcm0ucGFyZW50KSB7XG4gICAgICAgICAgICAgIGNvbnN0IGVuZEVsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke3Rlcm0ucGFyZW50fWApXG4gICAgICAgICAgICAgIGNvbnN0IGxpbmUgPSBuZXcgTGVhZGVyTGluZShzdGFydEVsZSwgZW5kRWxlKTtcbiAgICAgICAgICAgICAgbGluZS5jb2xvcj0nIzY2NidcbiAgICAgICAgICAgICAgbGluZS5lbmRQbHVnID0gJ2Rpc2MnXG4gICAgICAgICAgICAgIGxpbmUuc3RhcnRQbHVnID0gJ2Rpc2MnXG4gICAgICAgICAgICAgIHRoaXMubGluZVJlZi5wdXNoKGxpbmUpXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbn1cbiIsIjxkaXYgY2xhc3M9XCJjYXRlZ29yeVwiPlxuICAgIDxoMT57e2FwcF9zdHJpbmdzLmNhdGVnb3J5UHJldmlld319PC9oMT5cbiAgICA8ZGl2IGNsYXNzPVwiY2F0ZWdvcnlfX3dyYXBcIiAqbmdJZj1cImRhdGEubGVuZ3RoPjBcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNhdGVnb3J5X19jb2x1bW5cIiAqbmdGb3I9XCJsZXQgY2F0IG9mIGRhdGFcIj5cbiAgICAgICAgICAgIDxoZWFkZXIgY2xhc3M9XCJjYXRlZ29yeV9faGVhZGVyXCI+e3tjYXQubmFtZX19PC9oZWFkZXI+XG4gICAgICAgICAgICA8bWF0LWNhcmQgY2xhc3M9XCJjYXRlZ29yeV9fY2FyZHNcIiAgW25nQ2xhc3NdPVwieydoaWdobGlnaHQnOnRlcm0uc2VsZWN0ZWR9XCIgaWQ9XCJ7e3Rlcm0uZG9tSWR9fVwiICpuZ0Zvcj1cImxldCB0ZXJtIG9mIGNhdC50ZXJtc1wiPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiY2F0ZWdvcnlfX2NpcmNsZSBsZWZ0XCI+PC9zcGFuPlxuICAgICAgICAgICAgICAgIDxtYXQtY2FyZC1jb250ZW50Pnt7dGVybS5uYW1lfX08L21hdC1jYXJkLWNvbnRlbnQ+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJjYXRlZ29yeV9fY2lyY2xlIHJpZ2h0XCI+PC9zcGFuPlxuICAgICAgICAgICAgPC9tYXQtY2FyZD5cbiAgICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG48L2Rpdj5cbiJdfQ==